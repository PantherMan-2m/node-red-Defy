[
    {
        "id": "6c2dfeb262f54a31",
        "type": "tab",
        "label": "Testing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9d61395e.8839f8",
        "type": "tab",
        "label": "Files",
        "disabled": true,
        "info": ""
    },
    {
        "id": "731de46a.7645fc",
        "type": "tab",
        "label": "Modbus -video Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "dd749ff055035503",
        "type": "tab",
        "label": "ModBus Video2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "daaea0a7a0d2dd9e",
        "type": "tab",
        "label": "Workshop PLC",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "17fd6e0f1c66137c",
        "type": "tab",
        "label": "Tested",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9b30030f667a40d7",
        "type": "tab",
        "label": "Dashboard v1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e28943498755ce53",
        "type": "tab",
        "label": "Not Used but dev",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "3bab716a8a493dbf",
        "type": "subflow",
        "name": "HumidUI (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 140,
                "wires": [
                    {
                        "id": "37193b5976b8907d"
                    },
                    {
                        "id": "8343c4742146fe3f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "deviceID",
                "type": "dev",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-server",
                    "type": "input",
                    "opts": {
                        "types": [
                            "dev",
                            "file",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_chart.png"
    },
    {
        "id": "2197f9b20e245122",
        "type": "subflow",
        "name": "TempUI (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 249,
                "wires": [
                    {
                        "id": "b8f1f2881f690446"
                    },
                    {
                        "id": "b7cc2d5e27f8b491"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "deviceID",
                "type": "dev",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-server",
                    "type": "input",
                    "opts": {
                        "types": [
                            "dev",
                            "file",
                            "env"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_chart.png"
    },
    {
        "id": "c175c2ec63061429",
        "type": "group",
        "z": "17fd6e0f1c66137c",
        "name": "Line Chart",
        "style": {
            "label": true
        },
        "nodes": [
            "bef8cd8183ccd367",
            "1b86a4eacafb44ae",
            "c2d2a42515cd83f5",
            "a5091a6dbe21da16",
            "c82014019da70fca",
            "08f3035389cc43c5",
            "3a520ee0804eb844",
            "895a68a939600cd5",
            "58979c15d4747672",
            "9a11a81f559f9515",
            "82d9a6e4b26e5770",
            "266342b044b0d117",
            "18c978471dd15c23",
            "792687aae52e49e8",
            "856635bb1d42d6e0",
            "e05136bb7c2f2859",
            "3deb96c2e41d4b0a",
            "b9fc73066d698417",
            "00fe1687539e4acb"
        ],
        "x": 14,
        "y": 579
    },
    {
        "id": "663028f8b8ccf169",
        "type": "group",
        "z": "17fd6e0f1c66137c",
        "name": "Mass Data Gen",
        "style": {
            "label": true
        },
        "nodes": [
            "3abb3d519f8ecb18",
            "780466eb4ff31394",
            "048dce9438eace53",
            "e0d38fade5125d03",
            "a0e10bd14e50d18b",
            "14bb9badb25845de",
            "6c7aab8c807c9d17",
            "ed0293b1f59a8397",
            "55f606f7c312d466",
            "d44d5cbb68c05a77",
            "021e22b49c5da8c9",
            "0a3eaaa2cca098b4",
            "ddecf906a80322c7",
            "abfba6236acc5841"
        ],
        "x": 14,
        "y": 819
    },
    {
        "id": "0e3e8448ad30ad11",
        "type": "group",
        "z": "17fd6e0f1c66137c",
        "name": "Flow Par",
        "style": {
            "label": true
        },
        "nodes": [
            "ae5b6eb3b2a087ca",
            "ff7371fa9417502f",
            "454265f986e3d018"
        ],
        "x": 14,
        "y": 399
    },
    {
        "id": "51589d74d611689a",
        "type": "group",
        "z": "e28943498755ce53",
        "name": "IGNORE",
        "style": {
            "label": true
        },
        "nodes": [
            "d9ed99f65a21484b",
            "d0b113538530fc21",
            "2fee471ee603747b",
            "cd57cc93f40b33bf",
            "77d280335ca415c3",
            "8e31874de854de58",
            "72791997b670114d",
            "29b0db1a3a02d679",
            "1b7ec13bb2727fe8",
            "99b26f3bee3c8bd5",
            "403b2c84a44e5503",
            "5163250ad99982c8",
            "bfc72059ee745baa",
            "2f44c5c9d96f49e7",
            "e9626d92f1c4231c",
            "acbff347f607370d",
            "62e165e9060a41ac",
            "2975bbf63abefb31",
            "f13ad1d7d973c746",
            "4b5f00d0a1bfd552",
            "7c84fe6a6006617d",
            "a034bf3851442046",
            "add178ce8930c5d9",
            "7d9ab4d0eeef884b",
            "6a907c09d1641af6",
            "cd82a8f17ec4b36e",
            "576da4fa9da47ac8",
            "a6e30f8019df8026"
        ],
        "x": 94,
        "y": 519,
        "w": 1452,
        "h": 482
    },
    {
        "id": "92aa249eaec5de7d",
        "type": "group",
        "z": "e28943498755ce53",
        "name": "Futer Ideas",
        "style": {
            "label": true
        },
        "nodes": [
            "1fcb8b4e0bff81c3",
            "93aa61cd40a2a05f",
            "4d5d223efefabfeb",
            "6334e8f34d05c806",
            "fd343ce4ae3d1a43",
            "df0eff99c8cbad90",
            "e7c021dfc1971e2e",
            "80a942296819bcdc",
            "a654ab45d04ab0b9",
            "5da371c76d4aab6e",
            "716168c41cf7544f",
            "5111957458f23474",
            "68659c7fb211728a",
            "0cd61d0848ae8bdf",
            "9bf5c57d16b62e7f",
            "ce1b494cb98de31c",
            "c778681fbb1d003f",
            "0c1e38ad95a4438c",
            "53309bd334780b7f",
            "17563d9d9242889a",
            "727e73e098c75b22",
            "b50b59519fa68022",
            "a390fd7a79f04326"
        ],
        "x": 134,
        "y": 1019,
        "w": 1102,
        "h": 482
    },
    {
        "id": "a6f0ad5143b4c699",
        "type": "group",
        "z": "e28943498755ce53",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6e07a07f802f2a18",
            "80700e9d52863dfb",
            "6b5314cf87f51ec2",
            "a05bb29ac91da80e",
            "3659caf0d0ab8711",
            "c03c046254fa6da6",
            "c12b02288b168f4c",
            "e329c67db7a52247",
            "fdbf6524f3d4f24a",
            "e4862fd17c621ed5",
            "da9d3c5816598d49",
            "a8ceb766fa76166e"
        ],
        "x": 134,
        "y": 1519,
        "w": 1072,
        "h": 322
    },
    {
        "id": "9a043224f1e79f2a",
        "type": "junction",
        "z": "9d61395e.8839f8",
        "x": 640,
        "y": 780,
        "wires": [
            [
                "dde9d9bfd0ec2a3e"
            ]
        ]
    },
    {
        "id": "dde9d9bfd0ec2a3e",
        "type": "junction",
        "z": "9d61395e.8839f8",
        "x": 840,
        "y": 420,
        "wires": [
            [
                "a1387674cb6e8ae5",
                "ad86ee7a847580f6"
            ]
        ]
    },
    {
        "id": "91e8f1a1d18f8bfa",
        "type": "junction",
        "z": "9d61395e.8839f8",
        "x": 1800,
        "y": 420,
        "wires": [
            [
                "162e1dce9af55f43"
            ]
        ]
    },
    {
        "id": "9d6c93586cba78c9",
        "type": "junction",
        "z": "9d61395e.8839f8",
        "x": 1700,
        "y": 1080,
        "wires": [
            [
                "20a37dd7cb985d7b"
            ]
        ]
    },
    {
        "id": "c23a481b84c0659b",
        "type": "junction",
        "z": "9d61395e.8839f8",
        "x": 520,
        "y": 1040,
        "wires": [
            [
                "3847a9f8f48d1d61"
            ]
        ]
    },
    {
        "id": "8fbf19989e9ada84",
        "type": "junction",
        "z": "6c2dfeb262f54a31",
        "x": 1860,
        "y": 1500,
        "wires": [
            [
                "ae1be5dc38f60c0b",
                "ec0a5242c10cd615"
            ]
        ]
    },
    {
        "id": "f78abbe046064799",
        "type": "junction",
        "z": "6c2dfeb262f54a31",
        "x": 600,
        "y": 1880,
        "wires": [
            [
                "cd9dfcba13049524"
            ]
        ]
    },
    {
        "id": "b84e5668733433cb",
        "type": "junction",
        "z": "6c2dfeb262f54a31",
        "x": 600,
        "y": 1720,
        "wires": [
            [
                "c519c9bb07743518"
            ]
        ]
    },
    {
        "id": "113479bbc86295a4",
        "type": "junction",
        "z": "6c2dfeb262f54a31",
        "x": 400,
        "y": 1300,
        "wires": [
            [
                "23281f6c705311eb"
            ]
        ]
    },
    {
        "id": "aca8e25181d21be7",
        "type": "modbus-client",
        "name": "WorkshopPLC",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.1.5",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "54dde46e.53267c",
        "type": "modbus-client",
        "name": "local",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "queueLogEnabled": false,
        "failureLogEnabled": false,
        "tcpHost": "192.168.101.253",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": false,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "a447a863205073c8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b7548bf37471dcfe",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "656b38e67fb261e1",
        "type": "ui_group",
        "name": "Control",
        "tab": "a447a863205073c8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3be0fa6ecf341ab6",
        "type": "ui_group",
        "name": "Display",
        "tab": "a447a863205073c8",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f8bf0aa358206776",
        "type": "ui_tab",
        "name": "Modbus",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f743a2bb7d3e825e",
        "type": "ui_group",
        "name": "Control",
        "tab": "f8bf0aa358206776",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6fc6bb3d2df4abd",
        "type": "ui_group",
        "name": "Display",
        "tab": "f8bf0aa358206776",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a649fab2.daf3d8",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "75e4e587.f4c0ac",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "75e4e587.f4c0ac",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ad6dcc65156dd01c",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "50a66416164a879c",
        "type": "ui_tab",
        "name": "Test",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b8e2c970a49e110",
        "type": "ui_group",
        "d": true,
        "name": "Control",
        "tab": "50a66416164a879c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8bb4869336244573",
        "type": "ui_group",
        "d": true,
        "name": "Display",
        "tab": "50a66416164a879c",
        "order": 2,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e7b22ef26c4fd9ba",
        "type": "ui_tab",
        "name": "Workshop PLC",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3d695ddc4ae8ac52",
        "type": "ui_group",
        "name": "Control",
        "tab": "e7b22ef26c4fd9ba",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8f328fb03c98744c",
        "type": "ui_group",
        "name": "Graph",
        "tab": "e7b22ef26c4fd9ba",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "923b03fe8d0c014b",
        "type": "ui_spacer",
        "z": "6c2dfeb262f54a31",
        "name": "spacer",
        "group": "1b8e2c970a49e110",
        "order": 1,
        "width": 6,
        "height": 1
    },
    {
        "id": "5188a4cc66916299",
        "type": "ui_group",
        "z": "3bab716a8a493dbf",
        "name": "Humidity",
        "tab": "e078c6b.429dd38",
        "order": 3,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b1b078c3d9f60dd3",
        "type": "ui_group",
        "z": "2197f9b20e245122",
        "name": "Temperature",
        "tab": "e078c6b.429dd38",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "78467dade0c57cfb",
        "type": "ui_group",
        "z": "2197f9b20e245122",
        "name": "Temperature",
        "tab": "e078c6b.429dd38",
        "order": 2,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e078c6b.429dd38",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "fingerprint",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "210b3638edc51bb5",
        "type": "ui_group",
        "name": "Table",
        "tab": "e078c6b.429dd38",
        "order": 4,
        "disp": true,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c1e6de0d4d0c97f8",
        "type": "ui_group",
        "name": "Heading",
        "tab": "e078c6b.429dd38",
        "order": 1,
        "disp": false,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7fcbba22c7457906",
        "type": "ui_spacer",
        "z": "9b30030f667a40d7",
        "name": "spacer",
        "group": "c1e6de0d4d0c97f8",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "221aaafd01c2d7fb",
        "type": "ui_spacer",
        "z": "9b30030f667a40d7",
        "name": "spacer",
        "group": "c1e6de0d4d0c97f8",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "df8c0b88.91b0a8",
        "type": "MSSQL-CN",
        "name": "MSSQL",
        "server": "GIOVANNI\\SQLEXPRESS",
        "encyption": false,
        "database": "NodeRed"
    },
    {
        "id": "712b53e5.990dfc",
        "type": "mqtt-broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "NodeRedSQLClient",
        "usetls": false,
        "compatmode": true,
        "keepalive": "15",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "8eaf36042374305d",
        "type": "ui_tab",
        "name": "Recipes",
        "icon": "accessible",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0465010f96f3dad5",
        "type": "ui_group",
        "name": "Test Name",
        "tab": "8eaf36042374305d",
        "order": 1,
        "disp": true,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "53037fcbd25f4f9d",
        "type": "ui_group",
        "name": "Parameter Names 1 - 10",
        "tab": "8eaf36042374305d",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5fcb0776.c461c8",
        "type": "ui_group",
        "name": "Control",
        "tab": "7dfaf7ff.8d5ae",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "fc657953.1b728",
        "type": "ui_group",
        "name": "admin1",
        "tab": "7dfaf7ff.8d5ae",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "7f74a584.dea814",
        "type": "ui_group",
        "name": "admin2",
        "tab": "7dfaf7ff.8d5ae",
        "order": 4,
        "disp": true,
        "width": "21",
        "collapse": false
    },
    {
        "id": "f033628c.9c7ce",
        "type": "ui_group",
        "name": "Change Tabs",
        "tab": "7dfaf7ff.8d5ae",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "f8bac202fbe387ec",
        "type": "ui_group",
        "name": "Default",
        "tab": "8be53847c1a26213",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7dfaf7ff.8d5ae",
        "type": "ui_tab",
        "name": "Admin",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8be53847c1a26213",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f24d9462b2c2f4ce",
        "type": "ui_group",
        "name": "Parameter Values 1 - 10",
        "tab": "8eaf36042374305d",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "218e00eac196634f",
        "type": "ui_group",
        "name": "Basic",
        "tab": "8eaf36042374305d",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "422e58defd5a9006",
        "type": "ui_group",
        "name": "Parameter Names 11 - 20",
        "tab": "8eaf36042374305d",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d53c3b4207d65609",
        "type": "ui_group",
        "name": "Parameter Values 11 - 20",
        "tab": "8eaf36042374305d",
        "order": 7,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad102eceaed0af1f",
        "type": "ui_group",
        "name": "Parameter Names 21 - 30",
        "tab": "8eaf36042374305d",
        "order": 9,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6e2096695d7852db",
        "type": "ui_group",
        "name": "Parameter Values 21 - 30",
        "tab": "8eaf36042374305d",
        "order": 10,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad3c4128defb0956",
        "type": "ui_group",
        "name": "Parameter Instructions 1 - 10",
        "tab": "8eaf36042374305d",
        "order": 5,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6d0276f15a55c5b4",
        "type": "ui_group",
        "name": "Parameter Instructions 11 - 20",
        "tab": "8eaf36042374305d",
        "order": 8,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b0106dea0f6c9ae8",
        "type": "ui_group",
        "name": "Parameter Instructions 21 - 30",
        "tab": "8eaf36042374305d",
        "order": 11,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f57dcb2477578fdd",
        "type": "ui_spacer",
        "z": "6c2dfeb262f54a31",
        "name": "spacer",
        "group": "0465010f96f3dad5",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "6fda759b555cbbae",
        "type": "ui_spacer",
        "z": "6c2dfeb262f54a31",
        "name": "spacer",
        "group": "0465010f96f3dad5",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "37193b5976b8907d",
        "type": "ui_gauge",
        "z": "3bab716a8a493dbf",
        "name": "Humid Gauge",
        "group": "5188a4cc66916299",
        "order": 1,
        "width": 9,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "60",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "80",
        "seg2": "92",
        "className": "",
        "x": 440,
        "y": 260,
        "wires": []
    },
    {
        "id": "8343c4742146fe3f",
        "type": "ui_chart",
        "z": "3bab716a8a493dbf",
        "name": "Humidity Chart",
        "group": "5188a4cc66916299",
        "order": 2,
        "width": 10,
        "height": 4,
        "label": "Humidity (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 440,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b8f1f2881f690446",
        "type": "ui_gauge",
        "z": "2197f9b20e245122",
        "name": "TempGauge",
        "group": "78467dade0c57cfb",
        "order": 1,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "Temperature",
        "label": "C",
        "format": "{{value | number:1}}",
        "min": "40",
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "56",
        "className": "",
        "x": 330,
        "y": 340,
        "wires": []
    },
    {
        "id": "b7cc2d5e27f8b491",
        "type": "ui_chart",
        "z": "2197f9b20e245122",
        "name": "Temp Chart",
        "group": "78467dade0c57cfb",
        "order": 2,
        "width": 11,
        "height": 4,
        "label": "Temperature (C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "chart",
        "x": 330,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0d9323d2167a831c",
        "type": "comment",
        "z": "6c2dfeb262f54a31",
        "name": "Recipes",
        "info": "",
        "x": 100,
        "y": 720,
        "wires": []
    },
    {
        "id": "cd9dfcba13049524",
        "type": "ui_form",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Basic",
        "group": "218e00eac196634f",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Ground Bond High",
                "value": "GB_H",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Ground Bond Low",
                "value": "GB_L",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ACW High",
                "value": "ACW_H",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ACW Low",
                "value": "ACW_L",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Insulation Resistance High",
                "value": "IR_H",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Insulation Resistance Low",
                "value": "IR_L",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Earth Leakage Current High",
                "value": "ELC_H",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "GB_H": "",
            "GB_L": "",
            "ACW_H": "",
            "ACW_L": "",
            "IR_H": "",
            "IR_L": "",
            "ELC_H": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 610,
        "y": 1800,
        "wires": [
            [
                "c519c9bb07743518",
                "f78abbe046064799"
            ]
        ]
    },
    {
        "id": "6af32e127a95b37c",
        "type": "ui_text",
        "z": "6c2dfeb262f54a31",
        "group": "0465010f96f3dad5",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "User",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 330,
        "y": 1620,
        "wires": []
    },
    {
        "id": "b550b5e3643a081e",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 1: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par01",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 1700,
        "wires": [
            [
                "a5666c7649242d4f"
            ]
        ]
    },
    {
        "id": "93e854174c788a2a",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 2: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par02",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 1760,
        "wires": [
            [
                "beea7dabdd3b8661"
            ]
        ]
    },
    {
        "id": "4549fa812981801e",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 3: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par03",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 1820,
        "wires": [
            [
                "2b658bb77470155b"
            ]
        ]
    },
    {
        "id": "554e8bba05d3b1d4",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 4: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par04",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 1880,
        "wires": [
            [
                "31ef4fbb3bc35718"
            ]
        ]
    },
    {
        "id": "c022faba4aae56dc",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 5: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par05",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 1940,
        "wires": [
            [
                "eac559097244d2a7"
            ]
        ]
    },
    {
        "id": "3ab7a5e711325c2e",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 1: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par01",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 1700,
        "wires": [
            [
                "18ef3063a91b0ba8"
            ]
        ]
    },
    {
        "id": "2bfbf1dbbfa6f0a6",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 2: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par02",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 1760,
        "wires": [
            [
                "c202f860f300dd1c"
            ]
        ]
    },
    {
        "id": "3a8f56f6eb310b3b",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 3: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par03",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 1820,
        "wires": [
            [
                "5359eaba19c58239"
            ]
        ]
    },
    {
        "id": "2ba36142dd3baeab",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 4: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par04",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 1880,
        "wires": [
            [
                "ee95a66edfc95802"
            ]
        ]
    },
    {
        "id": "3837f6a169b6cd56",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 5: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par05",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 1940,
        "wires": [
            [
                "0e6c49b076b012bc"
            ]
        ]
    },
    {
        "id": "a6dc661328ea8ec2",
        "type": "join",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3190,
        "y": 1700,
        "wires": [
            [
                "96a583357f096554",
                "9e937f47df2abe53"
            ]
        ],
        "info": "The data dump here is done by sending\r\nempty data and then clearing empty data\r\nafter the join node."
    },
    {
        "id": "ec0a5242c10cd615",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "After Join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 1440,
        "wires": []
    },
    {
        "id": "32f3c5ef39f690c5",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 7: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par07",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 2060,
        "wires": [
            [
                "41e4e173c28980d6"
            ]
        ]
    },
    {
        "id": "a48296d1c2eee765",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 8: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par08",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 2120,
        "wires": [
            [
                "5a8aa79393110ddd"
            ]
        ]
    },
    {
        "id": "c79e87694ef20557",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 9: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par09",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 2180,
        "wires": [
            [
                "198c0eb1f776eb78"
            ]
        ]
    },
    {
        "id": "5713ed8acde2508f",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 10: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par10",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2240,
        "wires": [
            [
                "f16f50ffa5e5acec"
            ]
        ]
    },
    {
        "id": "892578186178d380",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 6: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par06",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1750,
        "y": 2000,
        "wires": [
            [
                "f5cf3fe9bbef9a7e"
            ]
        ]
    },
    {
        "id": "a8e5f3f5a672fcf8",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 6: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par06",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 2000,
        "wires": [
            [
                "616cdb8b4a91f8d0"
            ]
        ]
    },
    {
        "id": "ccad83bb76ebd6a9",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 7: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par07",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 2060,
        "wires": [
            [
                "9531ac04bcd23625"
            ]
        ]
    },
    {
        "id": "d2d3c9f3627c99b0",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 8: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par08",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 2120,
        "wires": [
            [
                "fd2a3ef97a49072e"
            ]
        ]
    },
    {
        "id": "e76f71d55ab65754",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 9: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par09",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 2180,
        "wires": [
            [
                "9ab08412c6e74e58"
            ]
        ]
    },
    {
        "id": "ade580ca5b8b58f0",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 10: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par10",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2240,
        "wires": [
            [
                "4ddd0b8db61e74a2"
            ]
        ]
    },
    {
        "id": "49302b2f2f671605",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 30: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par30",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3520,
        "wires": [
            [
                "a3d43f5a94c14e47"
            ]
        ]
    },
    {
        "id": "45cb88b2464ef3c1",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 21: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par21",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2980,
        "wires": [
            [
                "df0fd4360de03d36"
            ]
        ]
    },
    {
        "id": "2641a398dc3eceae",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 22: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par22",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3040,
        "wires": [
            [
                "b3c08c9c2da5b8db"
            ]
        ]
    },
    {
        "id": "3b5c6b039076dd7d",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 23: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par23",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3100,
        "wires": [
            [
                "fd8bfaa82864accb"
            ]
        ]
    },
    {
        "id": "168370d120520356",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 24: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par24",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3160,
        "wires": [
            [
                "349759b8c0ab987c"
            ]
        ]
    },
    {
        "id": "6b6fc3295ed8da15",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 25: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par25",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3220,
        "wires": [
            [
                "84304f01ca943eed"
            ]
        ]
    },
    {
        "id": "d3de31b9d6ba0527",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 26: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par26",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3280,
        "wires": [
            [
                "bd5948834cbf6f15"
            ]
        ]
    },
    {
        "id": "9508207b55e7767f",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 27: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par27",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3340,
        "wires": [
            [
                "2b77f5e922188d65"
            ]
        ]
    },
    {
        "id": "a63dcd5ade57f63c",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 28: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par28",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3400,
        "wires": [
            [
                "f259a3379da6aa30"
            ]
        ]
    },
    {
        "id": "2188b75d462673da",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 29: Name",
        "tooltip": "",
        "group": "ad102eceaed0af1f",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par29",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 3460,
        "wires": [
            [
                "b5290d77fe6dfe58"
            ]
        ]
    },
    {
        "id": "66f4e57cab3a54de",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 11: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par11",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2340,
        "wires": [
            [
                "ef823f960f974c3e"
            ]
        ]
    },
    {
        "id": "f525a67cb53102dc",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 12: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par12",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2400,
        "wires": [
            [
                "1fdf309fe588d243"
            ]
        ]
    },
    {
        "id": "84e3122bd7d94d3a",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 13: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par13",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2460,
        "wires": [
            [
                "cf8f491ae800493c"
            ]
        ]
    },
    {
        "id": "92a1b526c8b8e651",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 14: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par14",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2520,
        "wires": [
            [
                "c289d7a115bdf3fb"
            ]
        ]
    },
    {
        "id": "5752124f7c0d3f97",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 15: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par15",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2580,
        "wires": [
            [
                "4402e0e618574f5e"
            ]
        ]
    },
    {
        "id": "80eeda88e946f498",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 16: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par16",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2640,
        "wires": [
            [
                "7eb78ec4d5138153"
            ]
        ]
    },
    {
        "id": "1dbea0024fdf969d",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 17: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par17",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2700,
        "wires": [
            [
                "6d59e76b86be0a28"
            ]
        ]
    },
    {
        "id": "4bea9a6f9c5d4bcd",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 18: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par18",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2760,
        "wires": [
            [
                "8e421bd7fb91a283"
            ]
        ]
    },
    {
        "id": "90e9360c28ab605c",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 19: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par19",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2820,
        "wires": [
            [
                "63edeb66626d8730"
            ]
        ]
    },
    {
        "id": "03d90c3c5d9a62ed",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 20: Name",
        "tooltip": "",
        "group": "422e58defd5a9006",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par20",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 2880,
        "wires": [
            [
                "e32fe70e08233950"
            ]
        ]
    },
    {
        "id": "36af81f7b0cfeb78",
        "type": "comment",
        "z": "6c2dfeb262f54a31",
        "name": "Parameter Values",
        "info": "",
        "x": 390,
        "y": 3600,
        "wires": []
    },
    {
        "id": "ac6684d79d22ae33",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 11: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par11",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2340,
        "wires": [
            [
                "c98e11288469df69"
            ]
        ]
    },
    {
        "id": "2d7feff547a33376",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 12: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par12",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2400,
        "wires": [
            [
                "7baa406586600e21"
            ]
        ]
    },
    {
        "id": "b31412089034c789",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 13: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par13",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2460,
        "wires": [
            [
                "cefe53cbb9e1e213"
            ]
        ]
    },
    {
        "id": "5264d7e2ca566dcf",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 14: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par14",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2520,
        "wires": [
            [
                "1d9b742629050d78"
            ]
        ]
    },
    {
        "id": "f57cc8249de60113",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 15: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par15",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2580,
        "wires": [
            [
                "45b5ae5b0e7f3f32"
            ]
        ]
    },
    {
        "id": "177d8ca509d3e8da",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 16: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par16",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2640,
        "wires": [
            [
                "66f0a0394b718051"
            ]
        ]
    },
    {
        "id": "80287a3f8934bb43",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 17: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par17",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2700,
        "wires": [
            [
                "a086fbebea3be518"
            ]
        ]
    },
    {
        "id": "ea0b6d6475bef53a",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 18: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par18",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2760,
        "wires": [
            [
                "7921f6a6311ffe60"
            ]
        ]
    },
    {
        "id": "080dbc43c1b1c668",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 19: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par19",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2820,
        "wires": [
            [
                "5b676dccce7cc180"
            ]
        ]
    },
    {
        "id": "84760a90b7ac38c7",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 20: Value",
        "tooltip": "",
        "group": "d53c3b4207d65609",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par20",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2880,
        "wires": [
            [
                "f4ace34ae4baba5f"
            ]
        ]
    },
    {
        "id": "bab0609bea1707c5",
        "type": "switch",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Par01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par04",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par05",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par06",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par07",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par08",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par09",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par13",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par15",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par16",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par17",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par18",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par19",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par20",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par21",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par22",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par23",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par24",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par25",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par26",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par27",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par28",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par29",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Par30",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 30,
        "x": 1290,
        "y": 1980,
        "wires": [
            [
                "fc9c4e5f3bec7d30"
            ],
            [
                "061ba122cc75dfe2"
            ],
            [
                "7e20ef25a84e7025"
            ],
            [
                "7e71a7d70b7c2843"
            ],
            [
                "10f86b39506d14ad"
            ],
            [
                "28a5b0dc0e856696"
            ],
            [
                "2e1c04a97ffec243"
            ],
            [
                "38df7cb9fbec84fe"
            ],
            [
                "8a10678b9b80319b"
            ],
            [
                "9af59a3c970227de"
            ],
            [
                "efcd345f1308ba4c"
            ],
            [
                "4253c18f63848489"
            ],
            [
                "5e4a0bb75bf79d66"
            ],
            [
                "6d0249cd813c006a"
            ],
            [
                "3580d16a8bbd7c8f"
            ],
            [
                "680eef63014783bd"
            ],
            [
                "c485e9d42574985a"
            ],
            [
                "b9a95d5903b771fb"
            ],
            [
                "515b4e28efec9631"
            ],
            [
                "125f6e9b9782fa0f"
            ],
            [
                "6561495be17f1cc0"
            ],
            [
                "8246817c88683c58"
            ],
            [
                "0d53693a70c63f80"
            ],
            [
                "e136bd5fc69475c7"
            ],
            [
                "ddd4eadff5d1849a"
            ],
            [
                "8e0ac88c793446de"
            ],
            [
                "4e805fcdb202e36a"
            ],
            [
                "5486da295ed6c144"
            ],
            [
                "71e91cbd0dc5e394"
            ],
            [
                "04c21e41ee9b479d"
            ]
        ]
    },
    {
        "id": "b9156f78ebf3843b",
        "type": "file",
        "z": "6c2dfeb262f54a31",
        "name": "write settings.json",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 1500,
        "wires": [
            [
                "9ff3e803ce53cc13"
            ]
        ]
    },
    {
        "id": "dc1518dfe85bb897",
        "type": "file in",
        "z": "6c2dfeb262f54a31",
        "name": "Read settings.json",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 470,
        "y": 1980,
        "wires": [
            [
                "d2cab525d55aed4c"
            ]
        ]
    },
    {
        "id": "d2cab525d55aed4c",
        "type": "json",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 1980,
        "wires": [
            [
                "4a831eb513b40b2a",
                "ef386ef09874169f",
                "5491c556639992d7"
            ]
        ]
    },
    {
        "id": "6c98d771a755222f",
        "type": "split",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 990,
        "y": 1980,
        "wires": [
            [
                "ec50e4bd721ed7c0"
            ]
        ]
    },
    {
        "id": "fc9c4e5f3bec7d30",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1700,
        "wires": [
            [
                "b550b5e3643a081e",
                "c647b8d2dae95959"
            ]
        ]
    },
    {
        "id": "ec50e4bd721ed7c0",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Data = Pay",
        "func": "msg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1980,
        "wires": [
            [
                "bab0609bea1707c5"
            ]
        ]
    },
    {
        "id": "a5666c7649242d4f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1700,
        "wires": [
            [
                "3ab7a5e711325c2e",
                "56ce44966ecffab9"
            ]
        ]
    },
    {
        "id": "061ba122cc75dfe2",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1760,
        "wires": [
            [
                "93e854174c788a2a"
            ]
        ]
    },
    {
        "id": "7e20ef25a84e7025",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1820,
        "wires": [
            [
                "4549fa812981801e"
            ]
        ]
    },
    {
        "id": "7e71a7d70b7c2843",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1880,
        "wires": [
            [
                "554e8bba05d3b1d4"
            ]
        ]
    },
    {
        "id": "10f86b39506d14ad",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1940,
        "wires": [
            [
                "c022faba4aae56dc"
            ]
        ]
    },
    {
        "id": "28a5b0dc0e856696",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2000,
        "wires": [
            [
                "892578186178d380"
            ]
        ]
    },
    {
        "id": "2e1c04a97ffec243",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2060,
        "wires": [
            [
                "32f3c5ef39f690c5"
            ]
        ]
    },
    {
        "id": "38df7cb9fbec84fe",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2120,
        "wires": [
            [
                "a48296d1c2eee765"
            ]
        ]
    },
    {
        "id": "8a10678b9b80319b",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2180,
        "wires": [
            [
                "c79e87694ef20557"
            ]
        ]
    },
    {
        "id": "9af59a3c970227de",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2240,
        "wires": [
            [
                "5713ed8acde2508f"
            ]
        ]
    },
    {
        "id": "efcd345f1308ba4c",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2340,
        "wires": [
            [
                "66f4e57cab3a54de"
            ]
        ]
    },
    {
        "id": "4253c18f63848489",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2400,
        "wires": [
            [
                "f525a67cb53102dc"
            ]
        ]
    },
    {
        "id": "5e4a0bb75bf79d66",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2460,
        "wires": [
            [
                "84e3122bd7d94d3a"
            ]
        ]
    },
    {
        "id": "6d0249cd813c006a",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2520,
        "wires": [
            [
                "92a1b526c8b8e651"
            ]
        ]
    },
    {
        "id": "3580d16a8bbd7c8f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2580,
        "wires": [
            [
                "5752124f7c0d3f97"
            ]
        ]
    },
    {
        "id": "680eef63014783bd",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2640,
        "wires": [
            [
                "80eeda88e946f498"
            ]
        ]
    },
    {
        "id": "c485e9d42574985a",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2700,
        "wires": [
            [
                "1dbea0024fdf969d"
            ]
        ]
    },
    {
        "id": "b9a95d5903b771fb",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2760,
        "wires": [
            [
                "4bea9a6f9c5d4bcd"
            ]
        ]
    },
    {
        "id": "515b4e28efec9631",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2820,
        "wires": [
            [
                "90e9360c28ab605c"
            ]
        ]
    },
    {
        "id": "125f6e9b9782fa0f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2880,
        "wires": [
            [
                "03d90c3c5d9a62ed"
            ]
        ]
    },
    {
        "id": "8246817c88683c58",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2980,
        "wires": [
            [
                "45cb88b2464ef3c1"
            ]
        ]
    },
    {
        "id": "0d53693a70c63f80",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3040,
        "wires": [
            [
                "2641a398dc3eceae"
            ]
        ]
    },
    {
        "id": "e136bd5fc69475c7",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3100,
        "wires": [
            [
                "3b5c6b039076dd7d"
            ]
        ]
    },
    {
        "id": "ddd4eadff5d1849a",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3160,
        "wires": [
            [
                "168370d120520356"
            ]
        ]
    },
    {
        "id": "8e0ac88c793446de",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3220,
        "wires": [
            [
                "6b6fc3295ed8da15"
            ]
        ]
    },
    {
        "id": "4e805fcdb202e36a",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3280,
        "wires": [
            [
                "d3de31b9d6ba0527"
            ]
        ]
    },
    {
        "id": "5486da295ed6c144",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3340,
        "wires": [
            [
                "9508207b55e7767f"
            ]
        ]
    },
    {
        "id": "71e91cbd0dc5e394",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3400,
        "wires": [
            [
                "a63dcd5ade57f63c"
            ]
        ]
    },
    {
        "id": "04c21e41ee9b479d",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3460,
        "wires": [
            [
                "2188b75d462673da"
            ]
        ]
    },
    {
        "id": "6561495be17f1cc0",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 3520,
        "wires": [
            [
                "49302b2f2f671605"
            ]
        ]
    },
    {
        "id": "926b7f7b07524b45",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 21: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 2980,
        "wires": [
            [
                "15420c72e5270123"
            ]
        ]
    },
    {
        "id": "3da053dca96c3827",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 22: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par22",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3040,
        "wires": [
            [
                "91887bc3f41fdc6c"
            ]
        ]
    },
    {
        "id": "2db69c6de5b9c041",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 23: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par23",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3100,
        "wires": [
            [
                "2fbbcf3d440564a4"
            ]
        ]
    },
    {
        "id": "f8d90d443d9ec1ce",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 24: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par24",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3160,
        "wires": [
            [
                "de830f886aa8478d"
            ]
        ]
    },
    {
        "id": "7f2cfb2f0dd3414f",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 25: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par25",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3220,
        "wires": [
            [
                "01abfbc40c7fe9bf"
            ]
        ]
    },
    {
        "id": "854def567c4d5a5b",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 26: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par26",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3280,
        "wires": [
            [
                "54a933605b719705"
            ]
        ]
    },
    {
        "id": "e9722736788498ff",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 27: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par27",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3340,
        "wires": [
            [
                "c1bf03f595415d3d"
            ]
        ]
    },
    {
        "id": "bb804283e9e1d519",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 28: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par28",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3400,
        "wires": [
            [
                "f57777efaeedb11f"
            ]
        ]
    },
    {
        "id": "bb43794d4e86d80d",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 29: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par29",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3460,
        "wires": [
            [
                "9d3fcf8824b42eae"
            ]
        ]
    },
    {
        "id": "3ca12f597616538a",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 30: Value",
        "tooltip": "",
        "group": "6e2096695d7852db",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par30",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 3520,
        "wires": [
            [
                "e47354887ae83eb8"
            ]
        ]
    },
    {
        "id": "beea7dabdd3b8661",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1760,
        "wires": [
            [
                "2bfbf1dbbfa6f0a6"
            ]
        ]
    },
    {
        "id": "2b658bb77470155b",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1820,
        "wires": [
            [
                "3a8f56f6eb310b3b"
            ]
        ]
    },
    {
        "id": "31ef4fbb3bc35718",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1880,
        "wires": [
            [
                "2ba36142dd3baeab"
            ]
        ]
    },
    {
        "id": "eac559097244d2a7",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1940,
        "wires": [
            [
                "3837f6a169b6cd56"
            ]
        ]
    },
    {
        "id": "f5cf3fe9bbef9a7e",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2000,
        "wires": [
            [
                "a8e5f3f5a672fcf8"
            ]
        ]
    },
    {
        "id": "41e4e173c28980d6",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2060,
        "wires": [
            [
                "ccad83bb76ebd6a9"
            ]
        ]
    },
    {
        "id": "5a8aa79393110ddd",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2120,
        "wires": [
            [
                "d2d3c9f3627c99b0"
            ]
        ]
    },
    {
        "id": "198c0eb1f776eb78",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2180,
        "wires": [
            [
                "e76f71d55ab65754"
            ]
        ]
    },
    {
        "id": "f16f50ffa5e5acec",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2240,
        "wires": [
            [
                "ade580ca5b8b58f0"
            ]
        ]
    },
    {
        "id": "ef823f960f974c3e",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2340,
        "wires": [
            [
                "ac6684d79d22ae33"
            ]
        ]
    },
    {
        "id": "1fdf309fe588d243",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2400,
        "wires": [
            [
                "2d7feff547a33376"
            ]
        ]
    },
    {
        "id": "cf8f491ae800493c",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2460,
        "wires": [
            [
                "b31412089034c789"
            ]
        ]
    },
    {
        "id": "c289d7a115bdf3fb",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2520,
        "wires": [
            [
                "5264d7e2ca566dcf"
            ]
        ]
    },
    {
        "id": "4402e0e618574f5e",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2580,
        "wires": [
            [
                "f57cc8249de60113"
            ]
        ]
    },
    {
        "id": "7eb78ec4d5138153",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2640,
        "wires": [
            [
                "177d8ca509d3e8da"
            ]
        ]
    },
    {
        "id": "6d59e76b86be0a28",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2700,
        "wires": [
            [
                "80287a3f8934bb43"
            ]
        ]
    },
    {
        "id": "8e421bd7fb91a283",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2760,
        "wires": [
            [
                "ea0b6d6475bef53a"
            ]
        ]
    },
    {
        "id": "63edeb66626d8730",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2820,
        "wires": [
            [
                "080dbc43c1b1c668"
            ]
        ]
    },
    {
        "id": "e32fe70e08233950",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2880,
        "wires": [
            [
                "84760a90b7ac38c7"
            ]
        ]
    },
    {
        "id": "df0fd4360de03d36",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2980,
        "wires": [
            [
                "926b7f7b07524b45"
            ]
        ]
    },
    {
        "id": "b3c08c9c2da5b8db",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3040,
        "wires": [
            [
                "3da053dca96c3827"
            ]
        ]
    },
    {
        "id": "fd8bfaa82864accb",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3100,
        "wires": [
            [
                "2db69c6de5b9c041"
            ]
        ]
    },
    {
        "id": "349759b8c0ab987c",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3160,
        "wires": [
            [
                "f8d90d443d9ec1ce"
            ]
        ]
    },
    {
        "id": "84304f01ca943eed",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3220,
        "wires": [
            [
                "7f2cfb2f0dd3414f"
            ]
        ]
    },
    {
        "id": "bd5948834cbf6f15",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3280,
        "wires": [
            [
                "854def567c4d5a5b"
            ]
        ]
    },
    {
        "id": "2b77f5e922188d65",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3340,
        "wires": [
            [
                "e9722736788498ff"
            ]
        ]
    },
    {
        "id": "f259a3379da6aa30",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3400,
        "wires": [
            [
                "bb804283e9e1d519"
            ]
        ]
    },
    {
        "id": "b5290d77fe6dfe58",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3460,
        "wires": [
            [
                "bb43794d4e86d80d"
            ]
        ]
    },
    {
        "id": "a3d43f5a94c14e47",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3520,
        "wires": [
            [
                "3ca12f597616538a"
            ]
        ]
    },
    {
        "id": "e52a6e51884177a5",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 1: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par01",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 1700,
        "wires": [
            [
                "0e6ff6ed37dcca98"
            ]
        ]
    },
    {
        "id": "b9acca6b22c29ab1",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 2: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par02",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 1760,
        "wires": [
            [
                "25b21f9be73a7c35"
            ]
        ]
    },
    {
        "id": "1ad87887b9330cad",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 3: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par03",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 1820,
        "wires": [
            [
                "c8255af9d6d34f9f"
            ]
        ]
    },
    {
        "id": "15f475f32ba820a2",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 4: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par04",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 1880,
        "wires": [
            [
                "f23c31550b004b2f"
            ]
        ]
    },
    {
        "id": "544c45314c1ead12",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 5: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par05",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 1940,
        "wires": [
            [
                "4cdc0037157115d1"
            ]
        ]
    },
    {
        "id": "163e77f08a68ed7e",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 6: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par06",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 2000,
        "wires": [
            [
                "12d68a2cc02dc38d"
            ]
        ]
    },
    {
        "id": "68b4c19da3cd9290",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 7: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par07",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 2060,
        "wires": [
            [
                "2c8a9458e050cecf"
            ]
        ]
    },
    {
        "id": "3ab9beb02c6621f3",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 8: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par08",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 2120,
        "wires": [
            [
                "0488ed45fe114102"
            ]
        ]
    },
    {
        "id": "58c8c6c012950093",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 9: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par09",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2530,
        "y": 2180,
        "wires": [
            [
                "576d24e4aed453ea"
            ]
        ]
    },
    {
        "id": "27c206d53df70f8d",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 10: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par10",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2540,
        "y": 2240,
        "wires": [
            [
                "b7e9be2a2eaaa967"
            ]
        ]
    },
    {
        "id": "e9276d9ce84d5d22",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 11: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par11",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2510,
        "y": 2340,
        "wires": [
            [
                "ce2cc45ce7b47edf"
            ]
        ]
    },
    {
        "id": "c2ad3e23c37606a8",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 12: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par12",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2400,
        "wires": [
            [
                "cb9093a44a0fd117"
            ]
        ]
    },
    {
        "id": "ac75047116a5c9de",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 13: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par13",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2460,
        "wires": [
            [
                "0632394888c0cb25"
            ]
        ]
    },
    {
        "id": "3f842e07c134f5bc",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 14: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par14",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2520,
        "wires": [
            [
                "c63f240556151e27"
            ]
        ]
    },
    {
        "id": "6d95a3aed47bc361",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 15: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par15",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2580,
        "wires": [
            [
                "254b3750adc1682c"
            ]
        ]
    },
    {
        "id": "55ecdd8765548580",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 16: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par16",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2640,
        "wires": [
            [
                "f126075b5bbf0246"
            ]
        ]
    },
    {
        "id": "2b84fd28a5fb4c36",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 17: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par17",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2700,
        "wires": [
            [
                "939c756bcd8795df"
            ]
        ]
    },
    {
        "id": "e7ed824ee232956c",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 18: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par18",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2760,
        "wires": [
            [
                "ede845352478382a"
            ]
        ]
    },
    {
        "id": "65c938305b84de19",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 19: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par19",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2820,
        "wires": [
            [
                "898e5b22df41a9cf"
            ]
        ]
    },
    {
        "id": "59fbdca9f4a1e0c6",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 20: Instructions",
        "tooltip": "",
        "group": "6d0276f15a55c5b4",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par20",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2880,
        "wires": [
            [
                "776517b9b282d9a1"
            ]
        ]
    },
    {
        "id": "4c24ecb2997ef33b",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 21: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 2980,
        "wires": [
            [
                "0693527ec32f1c01"
            ]
        ]
    },
    {
        "id": "3fbb9cbf4badaa8e",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 22: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par22",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3040,
        "wires": [
            [
                "30e15c046ca7c036"
            ]
        ]
    },
    {
        "id": "cdb32848917c8446",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 23: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par23",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3100,
        "wires": [
            [
                "02d059fe02a83534"
            ]
        ]
    },
    {
        "id": "11442ae484eb9742",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 24: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par24",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3160,
        "wires": [
            [
                "64c79bbc1fe08166"
            ]
        ]
    },
    {
        "id": "4e3a83e31d981533",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 25: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par25",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3220,
        "wires": [
            [
                "1954575aae41fa27"
            ]
        ]
    },
    {
        "id": "9d1c75d37a32dba8",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 26: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par26",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3280,
        "wires": [
            [
                "290b41f7e66a4d4e"
            ]
        ]
    },
    {
        "id": "7011ea851456669d",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 27: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par27",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3340,
        "wires": [
            [
                "3e3f0a87efe4b20b"
            ]
        ]
    },
    {
        "id": "487f7c1e9028f50b",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 28: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par28",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3400,
        "wires": [
            [
                "a47eac4f4f7cc0df"
            ]
        ]
    },
    {
        "id": "50f652857dc94034",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 29: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par29",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3460,
        "wires": [
            [
                "eb902a9ad8ab250b"
            ]
        ]
    },
    {
        "id": "7550f80db485272e",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Parameter 30: Instructions",
        "tooltip": "",
        "group": "b0106dea0f6c9ae8",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par30",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2520,
        "y": 3520,
        "wires": [
            [
                "fa2f7f3bc1e0ac18"
            ]
        ]
    },
    {
        "id": "18ef3063a91b0ba8",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1700,
        "wires": [
            [
                "e52a6e51884177a5",
                "a10f8c330901fc44"
            ]
        ]
    },
    {
        "id": "b2be7fdf0830b5ac",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Clear",
        "func": "msg.data = { \n    \"name\": \"\", \n    \"value\": \"\", \n    \"description\": \"\" \n    };\nmsg.complete = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1700,
        "wires": [
            [
                "fc9c4e5f3bec7d30",
                "061ba122cc75dfe2",
                "7e20ef25a84e7025",
                "7e71a7d70b7c2843",
                "10f86b39506d14ad",
                "28a5b0dc0e856696",
                "2e1c04a97ffec243",
                "38df7cb9fbec84fe",
                "8a10678b9b80319b",
                "9af59a3c970227de",
                "efcd345f1308ba4c",
                "4253c18f63848489",
                "5e4a0bb75bf79d66",
                "6d0249cd813c006a",
                "3580d16a8bbd7c8f",
                "680eef63014783bd",
                "c485e9d42574985a",
                "b9a95d5903b771fb",
                "515b4e28efec9631",
                "125f6e9b9782fa0f",
                "8246817c88683c58",
                "0d53693a70c63f80",
                "e136bd5fc69475c7",
                "ddd4eadff5d1849a",
                "8e0ac88c793446de",
                "4e805fcdb202e36a",
                "5486da295ed6c144",
                "71e91cbd0dc5e394",
                "04c21e41ee9b479d",
                "6561495be17f1cc0"
            ]
        ]
    },
    {
        "id": "0e6ff6ed37dcca98",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\" :        \"\",\n        \"value\":        \"\",\n        \"description\":  \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for(let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1700,
        "wires": [
            [
                "3d640d1a9087f153",
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "c202f860f300dd1c",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1760,
        "wires": [
            [
                "b9acca6b22c29ab1"
            ]
        ]
    },
    {
        "id": "25b21f9be73a7c35",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1760,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "5359eaba19c58239",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1820,
        "wires": [
            [
                "1ad87887b9330cad"
            ]
        ]
    },
    {
        "id": "ee95a66edfc95802",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1880,
        "wires": [
            [
                "15f475f32ba820a2"
            ]
        ]
    },
    {
        "id": "0e6c49b076b012bc",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1940,
        "wires": [
            [
                "544c45314c1ead12"
            ]
        ]
    },
    {
        "id": "616cdb8b4a91f8d0",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2000,
        "wires": [
            [
                "163e77f08a68ed7e"
            ]
        ]
    },
    {
        "id": "9531ac04bcd23625",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2060,
        "wires": [
            [
                "68b4c19da3cd9290"
            ]
        ]
    },
    {
        "id": "fd2a3ef97a49072e",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2120,
        "wires": [
            [
                "3ab9beb02c6621f3"
            ]
        ]
    },
    {
        "id": "9ab08412c6e74e58",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2180,
        "wires": [
            [
                "58c8c6c012950093"
            ]
        ]
    },
    {
        "id": "4ddd0b8db61e74a2",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2240,
        "wires": [
            [
                "27c206d53df70f8d"
            ]
        ]
    },
    {
        "id": "c98e11288469df69",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2340,
        "wires": [
            [
                "e9276d9ce84d5d22"
            ]
        ]
    },
    {
        "id": "7baa406586600e21",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2400,
        "wires": [
            [
                "c2ad3e23c37606a8"
            ]
        ]
    },
    {
        "id": "cefe53cbb9e1e213",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2460,
        "wires": [
            [
                "ac75047116a5c9de"
            ]
        ]
    },
    {
        "id": "1d9b742629050d78",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2520,
        "wires": [
            [
                "3f842e07c134f5bc"
            ]
        ]
    },
    {
        "id": "45b5ae5b0e7f3f32",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2580,
        "wires": [
            [
                "6d95a3aed47bc361"
            ]
        ]
    },
    {
        "id": "66f0a0394b718051",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2640,
        "wires": [
            [
                "55ecdd8765548580"
            ]
        ]
    },
    {
        "id": "a086fbebea3be518",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2700,
        "wires": [
            [
                "2b84fd28a5fb4c36"
            ]
        ]
    },
    {
        "id": "7921f6a6311ffe60",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2760,
        "wires": [
            [
                "e7ed824ee232956c"
            ]
        ]
    },
    {
        "id": "5b676dccce7cc180",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2820,
        "wires": [
            [
                "65c938305b84de19"
            ]
        ]
    },
    {
        "id": "f4ace34ae4baba5f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2880,
        "wires": [
            [
                "59fbdca9f4a1e0c6"
            ]
        ]
    },
    {
        "id": "15420c72e5270123",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 2980,
        "wires": [
            [
                "4c24ecb2997ef33b"
            ]
        ]
    },
    {
        "id": "91887bc3f41fdc6c",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3040,
        "wires": [
            [
                "3fbb9cbf4badaa8e"
            ]
        ]
    },
    {
        "id": "2fbbcf3d440564a4",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3100,
        "wires": [
            [
                "cdb32848917c8446"
            ]
        ]
    },
    {
        "id": "de830f886aa8478d",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3160,
        "wires": [
            [
                "11442ae484eb9742"
            ]
        ]
    },
    {
        "id": "01abfbc40c7fe9bf",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3220,
        "wires": [
            [
                "4e3a83e31d981533"
            ]
        ]
    },
    {
        "id": "54a933605b719705",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3280,
        "wires": [
            [
                "9d1c75d37a32dba8"
            ]
        ]
    },
    {
        "id": "c1bf03f595415d3d",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3340,
        "wires": [
            [
                "7011ea851456669d"
            ]
        ]
    },
    {
        "id": "f57777efaeedb11f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3400,
        "wires": [
            [
                "487f7c1e9028f50b"
            ]
        ]
    },
    {
        "id": "9d3fcf8824b42eae",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3460,
        "wires": [
            [
                "50f652857dc94034"
            ]
        ]
    },
    {
        "id": "e47354887ae83eb8",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3520,
        "wires": [
            [
                "7550f80db485272e"
            ]
        ]
    },
    {
        "id": "c8255af9d6d34f9f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1820,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "f23c31550b004b2f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1880,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "4cdc0037157115d1",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1940,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "12d68a2cc02dc38d",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2000,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "2c8a9458e050cecf",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2060,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "0488ed45fe114102",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2120,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "576d24e4aed453ea",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2180,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "b7e9be2a2eaaa967",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2240,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "ce2cc45ce7b47edf",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2340,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "cb9093a44a0fd117",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2400,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "0632394888c0cb25",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2460,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "c63f240556151e27",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2520,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "254b3750adc1682c",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2580,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "f126075b5bbf0246",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2640,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "939c756bcd8795df",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2700,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "ede845352478382a",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2760,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "898e5b22df41a9cf",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2820,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "776517b9b282d9a1",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2880,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "0693527ec32f1c01",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2980,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "30e15c046ca7c036",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3040,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "02d059fe02a83534",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3100,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "64c79bbc1fe08166",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3160,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "1954575aae41fa27",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3220,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "290b41f7e66a4d4e",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3280,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "3e3f0a87efe4b20b",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3340,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "a47eac4f4f7cc0df",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3400,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "eb902a9ad8ab250b",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3460,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "fa2f7f3bc1e0ac18",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "func": "if (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 3520,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "0f712ca3bb59a557",
        "type": "ui_button",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "group": "0465010f96f3dad5",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 550,
        "y": 2080,
        "wires": [
            [
                "43ce6fa4c644f3f3"
            ]
        ]
    },
    {
        "id": "ae6730362411cdc5",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Mr Guy",
        "payloadType": "str",
        "x": 160,
        "y": 1620,
        "wires": [
            [
                "6af32e127a95b37c"
            ]
        ]
    },
    {
        "id": "43ce6fa4c644f3f3",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Trigger buffer",
        "func": "msg.complete = \"\";\nmsg.lineFlag = \"save\";\n\n//Need to save the button push event into join nodes to know\n//if join dump occured from save. \nmsg.topic = \"save\";\nmsg.payload = \"saved from button\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2080,
        "wires": [
            [
                "b4b222f939895c2c",
                "4571c934cd47a965"
            ]
        ]
    },
    {
        "id": "3d640d1a9087f153",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Final",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2890,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5ddde787aa186512",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 44",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1740,
        "wires": []
    },
    {
        "id": "c519c9bb07743518",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set JSON",
        "func": "msg.payload.basic = msg.payload;\nmsg.topic = \"basic\";\ndelete msg.payload.basic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1800,
        "wires": [
            [
                "5ddde787aa186512",
                "79a03bb1edba6504"
            ]
        ]
    },
    {
        "id": "d266b35bbc25032f",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "Parameter join out",
        "mode": "link",
        "links": [
            "fea68f0b27b3b0b6"
        ],
        "x": 3665,
        "y": 1700,
        "wires": []
    },
    {
        "id": "fea68f0b27b3b0b6",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "final join in",
        "links": [
            "79a03bb1edba6504",
            "d266b35bbc25032f",
            "a405fda7c0517634",
            "a9c4c3a2c9488c0e"
        ],
        "x": 1795,
        "y": 1460,
        "wires": [
            [
                "8fbf19989e9ada84"
            ]
        ]
    },
    {
        "id": "b3e761c2effb7f3d",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Del empties",
        "func": "msg.topic = \"parameterData\"; //Set topic\ndelete msg.data; // Just no need for this\ndelete msg.payload.save; //Needed this to put lineflag in as member\n\nlet output = {},\n    len = Object.keys(msg.payload).length,\n    keys = Object.keys(msg.payload);\nfor (let i = 0; i < len; i++) {\n    if((msg.payload[keys[i]] != null) && (msg.payload[keys[i]] != \"\")) {\n        output[keys[i]] = msg.payload[keys[i]];\n    }\n}\nmsg.payload = output;\n/*\nmsg.test = {\n    \"length\": len,\n    \"msg.payload\": msg.payload,\n    \"Payload[0]\": msg.payload[keys[0]],\n    \"count\": count,\n    \"output\": output\n}\n*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1700,
        "wires": [
            [
                "d266b35bbc25032f",
                "084617eda1b22a5b"
            ]
        ]
    },
    {
        "id": "c647b8d2dae95959",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 45",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ae1be5dc38f60c0b",
        "type": "join",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1950,
        "y": 1500,
        "wires": [
            [
                "3a63fa4f796bd032",
                "06167b8a190b1ed6",
                "76426b623e4f601c"
            ]
        ]
    },
    {
        "id": "b4b222f939895c2c",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "Trigger out",
        "mode": "link",
        "links": [
            "37a523ac432e0d6b"
        ],
        "x": 865,
        "y": 2080,
        "wires": []
    },
    {
        "id": "37a523ac432e0d6b",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Trigger in",
        "links": [
            "b4b222f939895c2c",
            "c20be865f12bee03"
        ],
        "x": 3045,
        "y": 1640,
        "wires": [
            [
                "a6dc661328ea8ec2"
            ]
        ]
    },
    {
        "id": "3a63fa4f796bd032",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Final Join",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 1440,
        "wires": []
    },
    {
        "id": "06167b8a190b1ed6",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set Write",
        "func": "if (msg.lineFlag == \"save\") {\n    msg.filename = msg.payload.fileLocation; //used to write to local file\n    msg.payload = {\n        \"File_Code\": msg.payload.File_Code,\n        \"File_Name\": msg.payload.filename,\n        \"parameterData\": msg.payload.parameterData,\n        \"basic\": msg.payload.basic\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 1500,
        "wires": [
            [
                "b9156f78ebf3843b",
                "cb690a9660cf7c8a",
                "c8ca4022d0d77e22"
            ]
        ]
    },
    {
        "id": "cb690a9660cf7c8a",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Set Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2280,
        "y": 1460,
        "wires": []
    },
    {
        "id": "25997782b99a6130",
        "type": "ui_dropdown",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Select file",
        "tooltip": "",
        "place": "Select option",
        "group": "0465010f96f3dad5",
        "order": 10,
        "width": 9,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1041,
        "y": 2800,
        "wires": [
            [
                "96b36f22a6198df9",
                "da2edc16fc7322a7"
            ]
        ]
    },
    {
        "id": "935d68cf5f9462a7",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 450,
        "y": 2800,
        "wires": [
            [
                "7c1dcedbb4597942"
            ]
        ]
    },
    {
        "id": "da79b47bea4f8cd0",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set options",
        "func": "msg.fullOptions = {};\nmsg.options = [];\nlet obj = {},\n    search = msg.search;\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    obj[msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')] = msg.payload[i].name;\n}\n\nif (search != undefined) {\n    for (const [key, value] of Object.entries(obj)) {\n        if (key.includes(search)) {\n            let temp = {};\n            temp[key] = value;\n            msg.options.push(temp);\n        }\n    }\n} else {\n    for (const [key, value] of Object.entries(obj)) {\n        let temp = {};\n        temp[key] = value;\n        msg.options.push(temp);\n    }\n}\n\nmsg.check = {\n    \"Obj\": obj\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 871,
        "y": 2800,
        "wires": [
            [
                "25997782b99a6130",
                "993a9b001a357c8c"
            ]
        ]
    },
    {
        "id": "96b36f22a6198df9",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 46",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 2740,
        "wires": []
    },
    {
        "id": "7c1dcedbb4597942",
        "type": "fs-file-lister",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "start": "C:\\Users\\User\\Documents\\Coding\\Node Red\\Recipes",
        "pattern": "*.*",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": true,
        "x": 701,
        "y": 2800,
        "wires": [
            [
                "da79b47bea4f8cd0",
                "b39f59f963f517e4"
            ]
        ]
    },
    {
        "id": "b39f59f963f517e4",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "file listener",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2740,
        "wires": []
    },
    {
        "id": "993a9b001a357c8c",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Options",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1001,
        "y": 2740,
        "wires": []
    },
    {
        "id": "6674d2d95cae619d",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "Search ",
        "tooltip": "",
        "group": "0465010f96f3dad5",
        "order": 8,
        "width": 7,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Search",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 300,
        "y": 2860,
        "wires": [
            [
                "714536eb9bff0bd0"
            ]
        ]
    },
    {
        "id": "542df5ca2e58aa34",
        "type": "ui_button",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "group": "0465010f96f3dad5",
        "order": 9,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 540,
        "y": 2700,
        "wires": [
            [
                "7c1dcedbb4597942"
            ]
        ]
    },
    {
        "id": "626e278e4cf58f5b",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Search",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 2860,
        "wires": []
    },
    {
        "id": "714536eb9bff0bd0",
        "type": "change",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "search",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 2860,
        "wires": [
            [
                "626e278e4cf58f5b",
                "7c1dcedbb4597942"
            ]
        ]
    },
    {
        "id": "717877cb82065dc3",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "selected file out",
        "mode": "link",
        "links": [
            "3d7f076cfd4e4c32"
        ],
        "x": 1326,
        "y": 2800,
        "wires": []
    },
    {
        "id": "a46910031a3f1d1c",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Selected file in",
        "links": [
            "686eb83bad60e464"
        ],
        "x": 305,
        "y": 1940,
        "wires": [
            [
                "dc1518dfe85bb897",
                "67bfbb724ce329bc"
            ]
        ]
    },
    {
        "id": "4a831eb513b40b2a",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1900,
        "wires": []
    },
    {
        "id": "ef386ef09874169f",
        "type": "change",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.parameterData",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1980,
        "wires": [
            [
                "6c98d771a755222f"
            ]
        ]
    },
    {
        "id": "baa6c2563f8b404d",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Basic Tests in",
        "links": [
            "5491c556639992d7"
        ],
        "x": 285,
        "y": 1840,
        "wires": [
            [
                "5dbb16cc67f26efc"
            ]
        ]
    },
    {
        "id": "5dbb16cc67f26efc",
        "type": "change",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.basic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1800,
        "wires": [
            [
                "cd9dfcba13049524",
                "b84e5668733433cb"
            ]
        ]
    },
    {
        "id": "5491c556639992d7",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "Read file data out",
        "mode": "link",
        "links": [
            "8de91a6651268b8a",
            "baa6c2563f8b404d"
        ],
        "x": 695,
        "y": 1920,
        "wires": []
    },
    {
        "id": "79a03bb1edba6504",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "Basic Tests out",
        "mode": "link",
        "links": [
            "fea68f0b27b3b0b6"
        ],
        "x": 935,
        "y": 1800,
        "wires": []
    },
    {
        "id": "6380ab3c4bd62f4c",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Basic clear in",
        "links": [
            "c20be865f12bee03"
        ],
        "x": 285,
        "y": 1760,
        "wires": [
            [
                "c0036b48afca50e1"
            ]
        ]
    },
    {
        "id": "c0036b48afca50e1",
        "type": "change",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"GB_H\":\"\",\"GB_L\":\"\",\"ACW_H\":\"\",\"ACW_L\":\"\",\"IR_H\":\"\",\"IR_L\":\"\",\"ELC_H\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1720,
        "wires": [
            [
                "cd9dfcba13049524"
            ]
        ]
    },
    {
        "id": "da2edc16fc7322a7",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set tags",
        "func": "msg.filename = msg.payload;\nmsg.filenameShort = msg.payload.replace(/^.*(\\\\|\\/|\\:)/, '');\nmsg.filenameShort = msg.filenameShort.toString().substring(0, msg.filenameShort.lastIndexOf('.'));\nflow.set(\"filenameShort\");\nmsg.lineFlag = \"fileSelected\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1201,
        "y": 2800,
        "wires": [
            [
                "717877cb82065dc3",
                "d5a6b4aa8c3d3543"
            ]
        ]
    },
    {
        "id": "d5a6b4aa8c3d3543",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1361,
        "y": 2760,
        "wires": []
    },
    {
        "id": "72055df34f3ff6d0",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Blocker",
        "func": "if (msg.filename == undefined) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 2860,
        "wires": [
            [
                "6674d2d95cae619d"
            ]
        ]
    },
    {
        "id": "686eb83bad60e464",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "FileSelected out",
        "mode": "link",
        "links": [
            "756ee76f9ccadbd8",
            "a46910031a3f1d1c"
        ],
        "x": 2515,
        "y": 1380,
        "wires": []
    },
    {
        "id": "4571c934cd47a965",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Save",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2020,
        "wires": []
    },
    {
        "id": "084617eda1b22a5b",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Save check1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3650,
        "y": 1620,
        "wires": []
    },
    {
        "id": "96a583357f096554",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Save check2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3470,
        "y": 1580,
        "wires": []
    },
    {
        "id": "57b8c369402f86ee",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 2140,
        "wires": [
            [
                "43ce6fa4c644f3f3"
            ]
        ]
    },
    {
        "id": "9e937f47df2abe53",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set trigger / dump",
        "func": "msg.complete = \"\";\nif (msg.lineflag == \"clear\") {\n    return { \n        msg: {\n            topic:      \"clear\",\n            payload:    \"\",\n            lineFlag:   \"clear\"\n\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3360,
        "y": 1700,
        "wires": [
            [
                "b3e761c2effb7f3d"
            ]
        ]
    },
    {
        "id": "56ce44966ecffab9",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 1640,
        "wires": []
    },
    {
        "id": "a10f8c330901fc44",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 50",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2460,
        "y": 1640,
        "wires": []
    },
    {
        "id": "76426b623e4f601c",
        "type": "switch",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "property": "lineFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "save",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "fileSelected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2130,
        "y": 1380,
        "wires": [
            [
                "64d6fcd6ed4fe465"
            ],
            [
                "2cc3c524ed5f4e18"
            ]
        ]
    },
    {
        "id": "c8aea7f920176540",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Switch to clear",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2490,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2cc3c524ed5f4e18",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set fileSelected",
        "func": "return {\n    filename: msg.filename,\n    filenameShort: msg.filenameShort\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1380,
        "wires": [
            [
                "686eb83bad60e464",
                "c8aea7f920176540"
            ]
        ]
    },
    {
        "id": "364a72862b9511e5",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "Clear from Save out",
        "mode": "link",
        "links": [
            "3d7f076cfd4e4c32"
        ],
        "x": 2535,
        "y": 1320,
        "wires": []
    },
    {
        "id": "64d6fcd6ed4fe465",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set Clear from Save",
        "func": "return {};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 1320,
        "wires": [
            [
                "364a72862b9511e5",
                "c8aea7f920176540"
            ]
        ]
    },
    {
        "id": "9dd5bcf1baac690e",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"GB_H\":10,\"GB_L\":5,\"ACW_H\":20,\"ACW_L\":5,\"IR_H\":7,\"IR_L\":3,\"ELC_H\":12}",
        "payloadType": "json",
        "x": 70,
        "y": 1900,
        "wires": [
            [
                "cd9dfcba13049524"
            ]
        ]
    },
    {
        "id": "67bfbb724ce329bc",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 53",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1920,
        "wires": []
    },
    {
        "id": "760861ebeac0ea7a",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Clear Parameters in",
        "links": [
            "c20be865f12bee03"
        ],
        "x": 1235,
        "y": 1660,
        "wires": [
            [
                "b2be7fdf0830b5ac"
            ]
        ]
    },
    {
        "id": "7cf0eb5e4d7af7a5",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Select File in",
        "links": [
            "c20be865f12bee03"
        ],
        "x": 906,
        "y": 2860,
        "wires": [
            [
                "25997782b99a6130"
            ]
        ]
    },
    {
        "id": "35cd53f851e1a767",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Search in",
        "links": [
            "c20be865f12bee03"
        ],
        "x": 25,
        "y": 2880,
        "wires": [
            [
                "72055df34f3ff6d0"
            ]
        ]
    },
    {
        "id": "c8ca4022d0d77e22",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Check Entry",
        "func": "//Incomplete: Headers can be set somewhere else\nlet tableName = '[NodeRed].[dbo].[Recipes]';\nlet headers = [\"File_Code\", \"File_Name\", \"JSON_Data\"];\nmsg.data = msg.payload;\n//let values = [obj.File_Code, \"'\" + obj.File_Name + \"'\", \"'\" + JSON.stringify(obj)];//.toString();\n\nmsg.payload = \"select * from [NodeRed].[dbo].[Recipes] with (updlock,serializable) where File_Code = \" + msg.payload.File_Code;\n\n/*\n//if file exists\nmsg.payload = \"update \" + tableName + \" set File_Name = '\" + obj.File_Name + \"', JSON_Data = '\" + JSON.stringify(obj) +\n        \"' where File_Code = \" + obj.File_Code;\n\n//if file doesn't exist\nmsg.payload = \"INSERT INTO \" + tableName + \" (\" +\n    headers.toString() + \") VALUES ( \" + values + \"') \" +\n    \"on duplicate File_Code update \" +\n    \"File_Code = \" + obj.File_Code + \" File_Name = \" + obj.File_Name + \" JSON_Data = \" + JSON.stringify(obj) ;\nmsg.check = {\n    obj : obj,\n    values : values\n} \n*/\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1560,
        "wires": [
            [
                "0f6a62d428984bc7"
            ]
        ]
    },
    {
        "id": "c899f2d93bb31988",
        "type": "MSSQL",
        "z": "6c2dfeb262f54a31",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 2640,
        "y": 1060,
        "wires": [
            [
                "0e9b091adacdb5ba",
                "fe1a48c20ce50f7f"
            ]
        ]
    },
    {
        "id": "20a3eb8c1e03d0e2",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2880,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ac2e0223ada93d3b",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "select JSON_Data from [NodeRed].[dbo].[Recipes] where File_Code = 14635",
        "payloadType": "str",
        "x": 150,
        "y": 2040,
        "wires": [
            [
                "4a3942a5d1cee888"
            ]
        ]
    },
    {
        "id": "4a3942a5d1cee888",
        "type": "MSSQL",
        "z": "6c2dfeb262f54a31",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 280,
        "y": 2040,
        "wires": [
            [
                "7b0410e1a51fa4cf"
            ]
        ]
    },
    {
        "id": "7b0410e1a51fa4cf",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "function 16",
        "func": "msg.payload = JSON.parse(msg.payload[0][\"JSON_Data\"]);\nmsg.lineFlag = \"SQL\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2040,
        "wires": [
            [
                "ef386ef09874169f",
                "5491c556639992d7",
                "38ff2dcc2e41b6fa"
            ]
        ]
    },
    {
        "id": "c1eacc6868b949a7",
        "type": "comment",
        "z": "6c2dfeb262f54a31",
        "name": "Active",
        "info": "",
        "x": 140,
        "y": 1980,
        "wires": []
    },
    {
        "id": "38ff2dcc2e41b6fa",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "MSSQL out",
        "mode": "link",
        "links": [
            "756ee76f9ccadbd8"
        ],
        "x": 655,
        "y": 2020,
        "wires": []
    },
    {
        "id": "fe1a48c20ce50f7f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "function 17",
        "func": "if (msg.payload.length == 0) {\n    msg.payload = \"error\";\n} else {\n    msg.payload = \"no error\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 1060,
        "wires": [
            [
                "2b21c5adc3713009"
            ]
        ]
    },
    {
        "id": "8b5e401b9a05911f",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "select * from [NodeRed].[dbo].[Recipes] with (updlock,serializable) where File_Code = 14635",
        "payloadType": "str",
        "x": 2390,
        "y": 1060,
        "wires": [
            [
                "c899f2d93bb31988"
            ]
        ]
    },
    {
        "id": "0e9b091adacdb5ba",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 59",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2790,
        "y": 980,
        "wires": []
    },
    {
        "id": "2b21c5adc3713009",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3010,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0f6a62d428984bc7",
        "type": "MSSQL",
        "z": "6c2dfeb262f54a31",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 2480,
        "y": 1560,
        "wires": [
            [
                "60f28e5f05f78a6d"
            ]
        ]
    },
    {
        "id": "60f28e5f05f78a6d",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Insert / Update MSSQL",
        "func": "let tableName = '[NodeRed].[dbo].[Recipes]';\nlet headers = [\"File_Code\", \"File_Name\", \"JSON_Data\"];\nlet obj = msg.data;\nlet values = [obj.File_Code, \"'\" + obj.File_Name + \"'\", \"'\" + JSON.stringify(obj)];//.toString();\n\nif (msg.payload.length == 0) { // checks if file exists\n    msg.payload = \"INSERT INTO \" + tableName + \" (\" +\n        headers.toString() + \") VALUES ( \" + values + \"') \";\n    msg.check = {\n        obj: obj,\n        values: values\n    } \n} else { // runs if entry does not exist\n    msg.payload = \"update \" + tableName + \" set File_Name = '\" + obj.File_Name + \"', JSON_Data = '\" + JSON.stringify(obj) +\n        \"' where File_Code = \" + obj.File_Code;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 1560,
        "wires": [
            [
                "20a3eb8c1e03d0e2",
                "0150faf44d6b43a0"
            ]
        ]
    },
    {
        "id": "0150faf44d6b43a0",
        "type": "MSSQL",
        "z": "6c2dfeb262f54a31",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 2880,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "9ff3e803ce53cc13",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "After Write",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2500,
        "y": 1460,
        "wires": []
    },
    {
        "id": "ad716cd4ea8c7136",
        "type": "ui_dropdown",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "0465010f96f3dad5",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "Parameters 1 - 10",
                "type": "str"
            },
            {
                "label": "",
                "value": "Parameters 11 - 20",
                "type": "str"
            },
            {
                "label": "",
                "value": "Parameters 21 - 30",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "f15827fb4efe6a5f"
            ]
        ]
    },
    {
        "id": "96f1c409dbde6642",
        "type": "ui_ui_control",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "events": "all",
        "x": 640,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "f15827fb4efe6a5f",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set ui control",
        "func": " /*Realised that a switch isn't really needed if the tab \n    name is the same as the group name*/\n\nswitch (msg.payload) {\n    case \"Parameters 1 - 10\":\n        msg.payload = '{\"group\":{\"hide\":[\"Recipes_Parameter_Names_11_-_20\",\"Recipes_Parameter_Values_11_-_20\",\"Recipes_Parameter_Instructions_11_-_20\",\"Recipes_Parameter_Names_21_-_30\",\"Recipes_Parameter_Values_21_-_30\",\"Recipes_Parameter_Instructions_21_-_30\"],\"show\":[\"Recipes_Parameter_Names_1_-_10\",\"Recipes_Parameter_Values_1_-_10\",\"Recipes_Parameter_Instructions_1_-_10\"]}}';\n        break;\n\n    case \"Parameters 11 - 20\":\n        msg.payload = '{\"group\":{\"hide\":[\"Recipes_Parameter_Names_1_-_10\",\"Recipes_Parameter_Values_1_-_10\",\"Recipes_Parameter_Instructions_1_-_10\",\"Recipes_Parameter_Names_21_-_30\",\"Recipes_Parameter_Values_21_-_30\",\"Recipes_Parameter_Instructions_21_-_30\"],\"show\":[\"Recipes_Parameter_Names_11_-_20\",\"Recipes_Parameter_Values_11_-_20\",\"Recipes_Parameter_Instructions_11_-_20\"]}}';\n        break;\n\n    case \"Parameters 21 - 30\":\n        msg.payload = '{\"group\":{\"hide\":[\"Recipes_Parameter_Names_1_-_10\",\"Recipes_Parameter_Values_1_-_10\",\"Recipes_Parameter_Instructions_1_-_10\",\"Recipes_Parameter_Names_11_-_20\",\"Recipes_Parameter_Values_11_-_20\",\"Recipes_Parameter_Instructions_11_-_20\"],\"show\":[\"Recipes_Parameter_Names_21_-_30\",\"Recipes_Parameter_Values_21_-_30\",\"Recipes_Parameter_Instructions_21_-_30\"]}}';\n        break;\n}\n\n/*\nlet groups = [\"Recipes_Stove 1\", \"Recipes_Stove 2\", \"Recipes_Stove 3\"];\n\nmsg.payload = \"Recipes_\" + msg.payload;\nlet index = groups.indexOf(msg.payload);\nlet pickedOption = groups.splice(index, 1);\nfor (let i = 0; i < groups.length; i++) {\n    groups[i] = '\"' + groups[i].toString().replace(/ /g, \"_\") + '\"';\n}\npickedOption = pickedOption.toString().replace(/ /g, \"_\");\nmsg.payload = '{\"group\":{\"hide\":[' + groups.toString() + '],\"show\":[\"' + pickedOption+'\"]}}';\n*/\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 840,
        "wires": [
            [
                "f5b4a7bd4d1ab765"
            ]
        ]
    },
    {
        "id": "f5b4a7bd4d1ab765",
        "type": "json",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "96f1c409dbde6642"
            ]
        ]
    },
    {
        "id": "8cd7942d92c2a6c4",
        "type": "comment",
        "z": "6c2dfeb262f54a31",
        "name": "Dropdown Parameters",
        "info": "",
        "x": 160,
        "y": 780,
        "wires": []
    },
    {
        "id": "37e5e1cf05f04932",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "File Name",
        "tooltip": "",
        "group": "0465010f96f3dad5",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "1de9dfdf901990fa"
            ]
        ]
    },
    {
        "id": "d749b9f44a2a2ba1",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Checking",
        "func": "if (msg.lineFlag == \"fileSelected\") {\n    msg.payload = msg.filenameShort;\n    return msg;\n} else if (msg.lineFlag == \"SQL\") {\n    msg.payload = msg.payload.File_Name;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1100,
        "wires": [
            [
                "37e5e1cf05f04932",
                "4f48d873ac6baeca",
                "7c1e899a2651d759"
            ]
        ]
    },
    {
        "id": "1de9dfdf901990fa",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set Par Flow",
        "func": "msg.topic = \"filename\";\nif (msg.filenameShort != undefined) {\n    node.send({ topic: \"filename\", payload: msg.filenameShort });\n    node.send({ topic: \"fileLocation\", payload: msg.filename });\n    return null;\n}\n//incomplete: I don't think this should be defined here, a hard coded location template is needed for saving from servers\nflow.set(\"filename\",\"C:/Users/User/Documents/Coding/Node Red/Recipes/\" + msg.payload + \".json\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1100,
        "wires": [
            [
                "b6bd57aa234737be",
                "a405fda7c0517634"
            ]
        ]
    },
    {
        "id": "756ee76f9ccadbd8",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Filename in",
        "links": [
            "686eb83bad60e464",
            "c20be865f12bee03",
            "38ff2dcc2e41b6fa"
        ],
        "x": 105,
        "y": 1080,
        "wires": [
            [
                "d749b9f44a2a2ba1",
                "1edb47acfa9dbac7"
            ]
        ]
    },
    {
        "id": "4f48d873ac6baeca",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "fileSelected",
        "func": "if (msg.filenameShort != undefined) {\n    return msg;\n} else if (msg.lineFlag == \"SQL\") {\n    return {\n        payload: msg.payload\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "1de9dfdf901990fa",
                "cb07a673fdfc2653"
            ]
        ]
    },
    {
        "id": "7c1e899a2651d759",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 58",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b6bd57aa234737be",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Filename",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a405fda7c0517634",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "Filename out",
        "mode": "link",
        "links": [
            "fea68f0b27b3b0b6"
        ],
        "x": 725,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1edb47acfa9dbac7",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cb07a673fdfc2653",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8dc188d1df343704",
        "type": "comment",
        "z": "6c2dfeb262f54a31",
        "name": "File Name",
        "info": "",
        "x": 120,
        "y": 980,
        "wires": []
    },
    {
        "id": "3dab220221184841",
        "type": "ui_text_input",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "label": "File Code",
        "tooltip": "",
        "group": "0465010f96f3dad5",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "23281f6c705311eb"
            ]
        ]
    },
    {
        "id": "c9b3c81e660b8022",
        "type": "change",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.File_Code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1340,
        "wires": [
            [
                "3dab220221184841",
                "113479bbc86295a4"
            ]
        ]
    },
    {
        "id": "f4ea55515c41729c",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "File Code Clear in",
        "links": [
            "c20be865f12bee03"
        ],
        "x": 325,
        "y": 1380,
        "wires": [
            [
                "3dab220221184841"
            ]
        ]
    },
    {
        "id": "23281f6c705311eb",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set topic",
        "func": "msg.topic = \"File_Code\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1340,
        "wires": [
            [
                "a9c4c3a2c9488c0e"
            ]
        ]
    },
    {
        "id": "8de91a6651268b8a",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "File Code in",
        "links": [
            "5491c556639992d7"
        ],
        "x": 105,
        "y": 1380,
        "wires": [
            [
                "c9b3c81e660b8022"
            ]
        ]
    },
    {
        "id": "a9c4c3a2c9488c0e",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "File Code out",
        "mode": "link",
        "links": [
            "fea68f0b27b3b0b6"
        ],
        "x": 680,
        "y": 1300,
        "wires": []
    },
    {
        "id": "848a99fa27c2e22f",
        "type": "comment",
        "z": "6c2dfeb262f54a31",
        "name": "File Code",
        "info": "",
        "x": 120,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ad9a723bcdb4d50b",
        "type": "comment",
        "z": "6c2dfeb262f54a31",
        "name": "User",
        "info": "",
        "x": 110,
        "y": 1500,
        "wires": []
    },
    {
        "id": "ca05b22563587d8e",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Par01\":{\"name\":\"Pizza\",\"value\":\"10\",\"description\":\"Words.\"},\"Par02\":{\"name\":\"Stove\",\"value\":\"7.5\",\"description\":\"More Words.\"},\"Par03\":{\"name\":\"Onion\",\"value\":\"3.14\",\"description\":\"Final words, beast mentality, lemon zesty.\"},\"Par04\":{\"name\":\"Chicken Fight\",\"value\":\"69\",\"description\":\"There are no words that describes the carnage that this is. Death. \"}}",
        "payloadType": "json",
        "x": 190,
        "y": 1820,
        "wires": [
            [
                "6c98d771a755222f"
            ]
        ]
    },
    {
        "id": "37d487ac91b0fdce",
        "type": "ui_button",
        "z": "6c2dfeb262f54a31",
        "name": "",
        "group": "0465010f96f3dad5",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "Cancel / Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Clear",
        "topicType": "str",
        "x": 620,
        "y": 2440,
        "wires": [
            [
                "d7c06429fe49a7d8"
            ]
        ]
    },
    {
        "id": "e4883f4f01d94855",
        "type": "inject",
        "z": "6c2dfeb262f54a31",
        "name": "on start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 420,
        "y": 2440,
        "wires": [
            [
                "37d487ac91b0fdce"
            ]
        ]
    },
    {
        "id": "3d7f076cfd4e4c32",
        "type": "link in",
        "z": "6c2dfeb262f54a31",
        "name": "Clear in",
        "links": [
            "717877cb82065dc3",
            "364a72862b9511e5"
        ],
        "x": 475,
        "y": 2380,
        "wires": [
            [
                "37d487ac91b0fdce"
            ]
        ]
    },
    {
        "id": "d7c06429fe49a7d8",
        "type": "function",
        "z": "6c2dfeb262f54a31",
        "name": "Set Clear line",
        "func": "if (msg.lineFlag == undefined) {\n    msg.lineFlag = \"clear\";\n}\n\nmsg.complete = \"\";\nmsg.topic = \"clear\"\nmsg.payload = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2440,
        "wires": [
            [
                "9cf37f99d9c46dd7",
                "c20be865f12bee03"
            ]
        ]
    },
    {
        "id": "9cf37f99d9c46dd7",
        "type": "debug",
        "z": "6c2dfeb262f54a31",
        "name": "Clear",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 2500,
        "wires": []
    },
    {
        "id": "c20be865f12bee03",
        "type": "link out",
        "z": "6c2dfeb262f54a31",
        "name": "Clear out",
        "mode": "link",
        "links": [
            "37a523ac432e0d6b",
            "6380ab3c4bd62f4c",
            "756ee76f9ccadbd8",
            "760861ebeac0ea7a",
            "7cf0eb5e4d7af7a5",
            "35cd53f851e1a767",
            "f4ea55515c41729c"
        ],
        "x": 965,
        "y": 2400,
        "wires": []
    },
    {
        "id": "10a34a73.96de26",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Autologger",
        "info": "",
        "x": 100,
        "y": 3000,
        "wires": []
    },
    {
        "id": "f6ce4717.b253f8",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 3080,
        "wires": [
            [
                "e5e99caa.1ff0d"
            ]
        ]
    },
    {
        "id": "e5e99caa.1ff0d",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Set data",
        "func": "var now = new Date();\n\nmsg.payload = {\n    \"timestamp\" : now.getTime(),\n    \"pressure\" : global.get(\"pressure\"),\n    \"out2\" : global.get(\"out2\"),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 3080,
        "wires": [
            [
                "38815858.149328"
            ]
        ]
    },
    {
        "id": "38815858.149328",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"logging_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/run/media/mmcblk0p1/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 3200,
        "wires": [
            [
                "67699325.78f71c"
            ]
        ]
    },
    {
        "id": "67699325.78f71c",
        "type": "fs-file-lister",
        "z": "9d61395e.8839f8",
        "name": "",
        "start": "/run/media/mmcblk0p1/",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": true,
        "x": 440,
        "y": 3200,
        "wires": [
            [
                "f253fdc7.90677",
                "54315610.0d0b28"
            ]
        ]
    },
    {
        "id": "f253fdc7.90677",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 3120,
        "wires": []
    },
    {
        "id": "54315610.0d0b28",
        "type": "switch",
        "z": "9d61395e.8839f8",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 3200,
        "wires": [
            [
                "44030339.4ee2cc"
            ],
            [
                "bcd07e71.4ed01"
            ]
        ]
    },
    {
        "id": "65037767.3cb448",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": true,
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,pressure,out2",
        "skip": "0",
        "strings": true,
        "x": 930,
        "y": 3180,
        "wires": [
            [
                "1ae03d6f.567a83"
            ]
        ]
    },
    {
        "id": "1ae03d6f.567a83",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1090,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "7d456693.a8bc48",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": false,
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,pressure,out2",
        "skip": "0",
        "strings": true,
        "x": 930,
        "y": 3220,
        "wires": [
            [
                "1ae03d6f.567a83"
            ]
        ]
    },
    {
        "id": "44030339.4ee2cc",
        "type": "change",
        "z": "9d61395e.8839f8",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 3180,
        "wires": [
            [
                "65037767.3cb448"
            ]
        ]
    },
    {
        "id": "bcd07e71.4ed01",
        "type": "change",
        "z": "9d61395e.8839f8",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 3220,
        "wires": [
            [
                "7d456693.a8bc48"
            ]
        ]
    },
    {
        "id": "abcbdee1.a060e",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Every 10min",
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3040,
        "wires": [
            [
                "e5e99caa.1ff0d"
            ]
        ]
    },
    {
        "id": "b159ca57c8afb8fa",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Testing reading and writing to files",
        "info": "",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "3e6e4474a5fb0559",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Set Flow Par",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "6d99166c26f1b907"
            ]
        ]
    },
    {
        "id": "6d99166c26f1b907",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Set Flow Par",
        "func": "//test to see if this is necessary\n/*I haven't seen this to be useful except for taking care of\nsome warning*/\nflow.set(\"slaveIP\", \"192.168.101.253\"); //Workshop IP4 for my PC\n\n//write to files\n/*Setting flow variables for file paths. Should load this \nfrom a file, so Incomplete*/\nflow.set(\"dataFile1FullPath\", \"Some path\");\n\n//tag headers\n/*Incomplete: This should also be able to be loaded in*/\nlet headers = [\"LongTime\", \"Temperature1\", \"Temperature2\", \"Temperature3\", \"Pump1\", \"Pressure1\", \"Fan1\"];\n\nflow.set(\"HeadersLength\", headers.length);\nflow.set(\"Headers\", []);\n\nfor (let i = 0; i < headers.length; i++) {\n    flow.set(\"Headers[\" + i + \"]\", headers[i]);\n}\n//flow.set(\"Headers[3]\", \"Player4\");\n\n// calculate the date\nlet now = new Date();\n//now.setTime(now.getTime() - 1000 * 60 * 60 * 24 * i);\nlet yyyy = now.getFullYear();\nlet mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nlet dd = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nlet hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nlet mmm = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nlet ss = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n\n/*Incomplete: These are hard coded for the testing I was doing*/\nflow.set(\"path\", \"C:/Users/User/Documents/Coding/Node Red/Writing CSV/\");\n// Generate out file name pattern\nflow.set(\"fileName\", \"GioTest_\" + yyyy + mm + dd + \".csv\");\n\n// Full filename with path \nflow.set(\"fullFileName\", flow.get(\"path\") + flow.get(\"fileName\"));\n\n// Flow CSV inputs\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "acdf386edf670903",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Set Flow Par",
        "info": "",
        "x": 110,
        "y": 100,
        "wires": []
    },
    {
        "id": "c37788a1a5dce115",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "Test2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2150,
        "y": 420,
        "wires": [
            [
                "7bee82f5ce3cd67c"
            ]
        ]
    },
    {
        "id": "27bd17278b31e24f",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "csv",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1710,
        "y": 400,
        "wires": [
            [
                "91e8f1a1d18f8bfa"
            ]
        ]
    },
    {
        "id": "8b05288560d32bc8",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "B CSV data (NE)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 340,
        "wires": []
    },
    {
        "id": "6c3256cc5427432c",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testtopic",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 3880,
        "wires": [
            [
                "0ae40c5f4787b7db"
            ]
        ]
    },
    {
        "id": "0ae40c5f4787b7db",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "function 8",
        "func": "msg.payload = {\n    \"payload\" : 52,\n    \"player\" : 1,\n    \"time\" : \"Day time\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 3880,
        "wires": [
            [
                "72372ca8672b3596",
                "1752f313601a8670"
            ]
        ]
    },
    {
        "id": "72372ca8672b3596",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 410,
        "y": 3880,
        "wires": [
            [
                "63d16e168d24cf24"
            ]
        ]
    },
    {
        "id": "63d16e168d24cf24",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "Test3",
        "filename": "C:\\Users\\User\\Documents\\Coding\\Node Red\\Writing CSV\\test3.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 590,
        "y": 3880,
        "wires": [
            []
        ]
    },
    {
        "id": "1752f313601a8670",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 3820,
        "wires": []
    },
    {
        "id": "e008d9e42b905702",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "Test3",
        "filename": "C:\\Users\\User\\Documents\\Coding\\Node Red\\Writing CSV\\Test3.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 295,
        "y": 3688.749979019165,
        "wires": [
            []
        ]
    },
    {
        "id": "f22134a459f4c6df",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Delete files",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 145,
        "y": 3688.749979019165,
        "wires": [
            [
                "e008d9e42b905702"
            ]
        ]
    },
    {
        "id": "54ec88759e63ec60",
        "type": "exec",
        "z": "9d61395e.8839f8",
        "command": "if exist \"C:\\Users\\User\\Documents\\Coding\\Node Red\\Writing CSV\\Test3.csv\" (     notepad \"C:\\Users\\User\\Documents\\Coding\\Node Red\\Writing CSV\\Test3.csv\" ) else (     return 0; )",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Test3",
        "x": 595,
        "y": 3688.749979019165,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a0ca98773875d05e",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Open",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 455,
        "y": 3688.749979019165,
        "wires": [
            [
                "54ec88759e63ec60"
            ]
        ]
    },
    {
        "id": "6e0e5d346292e7a0",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "Test",
        "filename": "C:\\Users\\User\\Documents\\Coding\\Node Red\\Writing CSV\\Test.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 295,
        "y": 3748.749979019165,
        "wires": [
            []
        ]
    },
    {
        "id": "a125e55c0a2956a0",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Delete files",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 145,
        "y": 3748.749979019165,
        "wires": [
            [
                "6e0e5d346292e7a0"
            ]
        ]
    },
    {
        "id": "fe67b707ab9a9038",
        "type": "exec",
        "z": "9d61395e.8839f8",
        "command": "if exist \"C:\\Users\\User\\Documents\\Coding\\Node Red\\Writing CSV\\Test.csv\" (     notepad \"C:\\Users\\User\\Documents\\Coding\\Node Red\\Writing CSV\\Test.csv\" ) else (     return 0; )",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Test3",
        "x": 595,
        "y": 3748.749979019165,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7a6376a98060e8bc",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Open",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 455,
        "y": 3748.749979019165,
        "wires": [
            [
                "fe67b707ab9a9038"
            ]
        ]
    },
    {
        "id": "28f3a6595f1eabfa",
        "type": "switch",
        "z": "9d61395e.8839f8",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1370,
        "y": 420,
        "wires": [
            [
                "689975d45b094300"
            ],
            [
                "c86b0edf2230b720"
            ]
        ]
    },
    {
        "id": "4e3bf013a8b4c671",
        "type": "fs-file-lister",
        "z": "9d61395e.8839f8",
        "name": "",
        "start": "*",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 1220,
        "y": 420,
        "wires": [
            [
                "28f3a6595f1eabfa",
                "6ad651c13b7dc08e"
            ]
        ]
    },
    {
        "id": "5394a93ee8216242",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "csv",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1710,
        "y": 440,
        "wires": [
            [
                "91e8f1a1d18f8bfa"
            ]
        ]
    },
    {
        "id": "c7ac8550675a31b6",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "B CSV data (E)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 500,
        "wires": []
    },
    {
        "id": "689975d45b094300",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "file =! exist",
        "func": "msg.payload = msg.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 400,
        "wires": [
            [
                "27bd17278b31e24f",
                "8b05288560d32bc8"
            ]
        ]
    },
    {
        "id": "c86b0edf2230b720",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "file == exist",
        "func": "msg.payload = msg.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 440,
        "wires": [
            [
                "5394a93ee8216242",
                "c7ac8550675a31b6"
            ]
        ]
    },
    {
        "id": "6ad651c13b7dc08e",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "B File lister",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 500,
        "wires": []
    },
    {
        "id": "37643ba59fdc37fa",
        "type": "join",
        "z": "9d61395e.8839f8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 810,
        "y": 1080,
        "wires": [
            [
                "272b3c8961bf3835",
                "818d89c559260072"
            ]
        ]
    },
    {
        "id": "272b3c8961bf3835",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "Join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7db9057277795737",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "restartTimeout",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topOrBottom",
                "v": "top",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "9589d089fda41c26"
            ]
        ]
    },
    {
        "id": "9589d089fda41c26",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "multiply",
        "func": "let output = []\nfor (let i = 0; i < 5; i++) {\n    output.push(msg);\n}\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1080,
        "wires": [
            [
                "57216b0c0ed213c7"
            ]
        ]
    },
    {
        "id": "57216b0c0ed213c7",
        "type": "delay",
        "z": "9d61395e.8839f8",
        "name": "",
        "pauseType": "rate",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 1080,
        "wires": [
            [
                "3847a9f8f48d1d61"
            ]
        ]
    },
    {
        "id": "3847a9f8f48d1d61",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "switch T/B",
        "func": "if (msg.topOrBottom == \"top\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1080,
        "wires": [
            [
                "37643ba59fdc37fa"
            ]
        ]
    },
    {
        "id": "818d89c559260072",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Push data",
        "func": "msg.data = msg.payload;\n/*\nmsg.payload = {\n    \"start\" : flow.get(\"path\"),\n    \"pattern\" : flow.get(\"fileName\")\n}\nmsg.filename = flow.get(\"fullFileName\");\n*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 953.8888893127441,
        "y": 1080.5555057525635,
        "wires": [
            [
                "3625e4397968ea0d"
            ]
        ]
    },
    {
        "id": "44673df4713fb605",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "WRITING TO CSV",
        "info": "",
        "x": 130,
        "y": 1340,
        "wires": []
    },
    {
        "id": "85a031f44be5b297",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Temperature1",
        "func": "msg.topic = \"Temperature1\"\nmsg.data = Math.floor(Math.random() * 101);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 420,
        "wires": [
            [
                "dde9d9bfd0ec2a3e"
            ]
        ]
    },
    {
        "id": "9cb14593de365b4f",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Temperature2",
        "func": "msg.topic = \"Temperature2\";\nmsg.data = Math.floor(Math.random() * 101);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 480,
        "wires": [
            [
                "dde9d9bfd0ec2a3e"
            ]
        ]
    },
    {
        "id": "034e8820a3a1fc6b",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Temperature3",
        "func": "msg.topic = \"Temperature3\";\nmsg.data = Math.floor(Math.random() * 101);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 540,
        "wires": [
            [
                "dde9d9bfd0ec2a3e"
            ]
        ]
    },
    {
        "id": "ad86ee7a847580f6",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "Data Generated",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 340,
        "wires": []
    },
    {
        "id": "a1387674cb6e8ae5",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Buffer",
        "func": "//msg.payload = {};\n//context.set(\"output\", {})\ncontext.set(msg.topic, msg.data)\nif (msg.topic == \"bufferTrigger\") {\n\n    //set the time\n    context.set('LongTime', msg.payload);\n\n    let output = {};\n    msg.payload = {};\n\n    //Writing the config for file listener\n    msg.payload[\"start\"] = flow.get(\"path\");\n    msg.payload[\"pattern\"] = flow.get(\"fileName\");\n\n    output.LongTime = new Date().getTime();\n    let tags = flow.get(\"Parameters\").tagNames;\n    //let tags = [\"Player1\", \"player2\", \"Player3\"];\n\n    for(let i = 0; i < tags.length; i++) {\n        output[tags[i]] = context.get(tags[i]);\n    }\n    msg.data = output;\n\n    msg.columns = tags.toString(); //Used for CSV node\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 420,
        "wires": [
            [
                "799a98433f1ecc18",
                "4e3bf013a8b4c671"
            ]
        ],
        "info": "Message topic = heading in database"
    },
    {
        "id": "799a98433f1ecc18",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "Buffer",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "data",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 500,
        "wires": []
    },
    {
        "id": "0e7c53c314302e88",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Trigger buffer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bufferTrigger",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "9a043224f1e79f2a"
            ]
        ]
    },
    {
        "id": "162e1dce9af55f43",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Config",
        "func": "msg.filename = flow.get(\"fullFileName\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 420,
        "wires": [
            [
                "c37788a1a5dce115",
                "4906480f448e7368"
            ]
        ]
    },
    {
        "id": "4906480f448e7368",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "File write data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 360,
        "wires": []
    },
    {
        "id": "7bee82f5ce3cd67c",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 420,
        "wires": []
    },
    {
        "id": "4d185d09.5d09a4",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1640,
        "y": 2380,
        "wires": [
            [
                "b18987ec.4d8fd"
            ]
        ]
    },
    {
        "id": "b18987ec.4d8fd",
        "type": "change",
        "z": "9d61395e.8839f8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"C:\\\\Users\\\\user\\\\Documents\\\\projects\\\\\" & $globalContext(\"directory\") & \"\\\\\" & $globalContext(\"file\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 2380,
        "wires": [
            [
                "fcb80581.9b311"
            ]
        ]
    },
    {
        "id": "fcb80581.9b311",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d86d49e2839ed225",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "restartTimeout",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topOrBottom",
                "v": "top",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1040,
        "wires": [
            [
                "c23a481b84c0659b"
            ]
        ]
    },
    {
        "id": "e790f22e031b6d53",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Inject JSON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tagNames\":[\"LongTime\",\"Temperature1\",\"Temperature2\",\"Temperature3\",\"Pump1\",\"Pressure1\",\"Fan1\"],\"csv\":{\"savePath\":\"C:/Users/User/Documents/Coding/Node Red/Writing CSV/\",\"saveFileName\":\"\"}}",
        "payloadType": "json",
        "x": 710,
        "y": 160,
        "wires": [
            [
                "99485996053fbe02"
            ]
        ],
        "info": "Includes headers\r\n"
    },
    {
        "id": "ecc1fd58fed0a027",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Saving and retrieving data",
        "info": "",
        "x": 710,
        "y": 100,
        "wires": []
    },
    {
        "id": "e49213b329a8117e",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "write settings.json",
        "filename": "C:/Users/User/Documents/Coding/Node Red/Writing CSV/settings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1110,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1af1c7566a3488b7",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 710,
        "y": 220,
        "wires": [
            [
                "da856443a798135d"
            ]
        ]
    },
    {
        "id": "da856443a798135d",
        "type": "file in",
        "z": "9d61395e.8839f8",
        "name": "Read settings.json",
        "filename": "C:/Users/User/Documents/Coding/Node Red/Writing CSV/settings.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "93a604eedb0bff69"
            ]
        ]
    },
    {
        "id": "93a604eedb0bff69",
        "type": "json",
        "z": "9d61395e.8839f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 220,
        "wires": [
            [
                "8a10cde13efce16f"
            ]
        ]
    },
    {
        "id": "99485996053fbe02",
        "type": "json",
        "z": "9d61395e.8839f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 160,
        "wires": [
            [
                "e49213b329a8117e"
            ]
        ]
    },
    {
        "id": "bfb34dab741eacc4",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1510,
        "y": 220,
        "wires": []
    },
    {
        "id": "8a10cde13efce16f",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Make data global",
        "func": "flow.set(\"Parameters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 220,
        "wires": [
            [
                "bfb34dab741eacc4"
            ]
        ]
    },
    {
        "id": "2de93d7dd6e2b525",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Note",
        "info": "This section can be replaced by an inject node",
        "x": 350,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c9fb9f9d.f6293",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Graph the data",
        "info": "",
        "x": 120,
        "y": 2360,
        "wires": []
    },
    {
        "id": "e6a69d48.4e148",
        "type": "ui_button",
        "z": "9d61395e.8839f8",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "show_chart",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 2820,
        "wires": [
            [
                "4dcb1ec9.a4d18"
            ]
        ]
    },
    {
        "id": "4dcb1ec9.a4d18",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2820,
        "wires": [
            [
                "1ce8e5c3.42bbca"
            ]
        ]
    },
    {
        "id": "1ce8e5c3.42bbca",
        "type": "file in",
        "z": "9d61395e.8839f8",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 460,
        "y": 2820,
        "wires": [
            [
                "9cc9edec.d2445"
            ]
        ]
    },
    {
        "id": "9cc9edec.d2445",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 610,
        "y": 2820,
        "wires": [
            [
                "45c68326.06f80c",
                "fe46f10.47ec81"
            ]
        ]
    },
    {
        "id": "45c68326.06f80c",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 2780,
        "wires": []
    },
    {
        "id": "fe46f10.47ec81",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Format data for chart",
        "func": "var chart = [{\n    \"series\":[\"Pressure\",\"OUT2\"],\n    \"data\":[],\n    \"labels\":[\"\"]\n}];\n\nvar Player1 = [];\nvar Player2 = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    Player1.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].Player1});\n    Player2.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].Player2});\n\n}\nchart[0].data.push(Player1);\nchart[0].data.push(Player2);\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2820,
        "wires": [
            [
                "137d11d9.8c82ee"
            ]
        ]
    },
    {
        "id": "137d11d9.8c82ee",
        "type": "ui_chart",
        "z": "9d61395e.8839f8",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 7,
        "width": 18,
        "height": 6,
        "label": "File data",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe0d9de.7fb936",
        "type": "fs-file-lister",
        "z": "9d61395e.8839f8",
        "name": "",
        "start": "C:/Users/User/Documents/Coding/Node Red/Writing CSV",
        "pattern": "*.*",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": true,
        "x": 360,
        "y": 2520,
        "wires": [
            [
                "825ffe1a.f1739",
                "91bf4e94.f05c3",
                "4f5f4787.98e048"
            ]
        ]
    },
    {
        "id": "92083f68.2f248",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 2480,
        "wires": [
            [
                "3fe0d9de.7fb936"
            ]
        ]
    },
    {
        "id": "825ffe1a.f1739",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 2480,
        "wires": []
    },
    {
        "id": "b8a3e609.2381e8",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "SD Card File Browser",
        "info": "",
        "x": 140,
        "y": 2420,
        "wires": []
    },
    {
        "id": "77b4dbad.a0ac64",
        "type": "ui_button",
        "z": "9d61395e.8839f8",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 2520,
        "wires": [
            [
                "3fe0d9de.7fb936"
            ]
        ]
    },
    {
        "id": "9e9977df.ef4538",
        "type": "ui_dropdown",
        "z": "9d61395e.8839f8",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "a649fab2.daf3d8",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 770,
        "y": 2520,
        "wires": [
            [
                "a3485835.954858"
            ]
        ]
    },
    {
        "id": "91bf4e94.f05c3",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Format data",
        "func": "msg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    let obj = {};\n    obj [msg.payload[i].name]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2520,
        "wires": [
            [
                "9e9977df.ef4538",
                "c79c1f2d3eaf4559"
            ]
        ]
    },
    {
        "id": "e7d0b640.ebec18",
        "type": "ui_template",
        "z": "9d61395e.8839f8",
        "group": "a649fab2.daf3d8",
        "name": "",
        "order": 6,
        "width": 18,
        "height": 6,
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "f9f28b19.9789e8",
        "type": "template",
        "z": "9d61395e.8839f8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/red/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 800,
        "y": 2580,
        "wires": [
            [
                "e7d0b640.ebec18"
            ]
        ]
    },
    {
        "id": "4f5f4787.98e048",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Convert timestamps",
        "func": "\nfor (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 2580,
        "wires": [
            [
                "f9f28b19.9789e8"
            ]
        ]
    },
    {
        "id": "a3485835.954858",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Save selection",
        "func": "// Save the file name selected from the dropdown in the flow context\nflow.set(\"fileselected\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "6eeb0585.2b544c",
        "type": "ui_button",
        "z": "9d61395e.8839f8",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 2680,
        "wires": [
            [
                "339b1c3f.786254"
            ]
        ]
    },
    {
        "id": "339b1c3f.786254",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\n// and delete the context/selection as we are deleting the file as well\nflow.set(\"fileselected\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2680,
        "wires": [
            [
                "7f565fc5.63fbb"
            ]
        ]
    },
    {
        "id": "7f565fc5.63fbb",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "Delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 480,
        "y": 2680,
        "wires": [
            [
                "3fe0d9de.7fb936"
            ]
        ]
    },
    {
        "id": "c79c1f2d3eaf4559",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "formating",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2440,
        "wires": []
    },
    {
        "id": "2bece55a0ada1e4e",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Flow Parameters",
        "info": "",
        "x": 1000,
        "y": 2480,
        "wires": []
    },
    {
        "id": "c8840c8634c89e05",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Generate CSV data & file",
        "info": "",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "74df90b228436ea6",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "Check Variables",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "ae91ba94bcf225cc"
            ]
        ]
    },
    {
        "id": "ae91ba94bcf225cc",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "check global",
        "func": "msg.payload = {\n    \"Full Name\" : flow.get(\"fullFileName\"),\n    \"Path\" : flow.get(\"path\"),\n    \"File Name\" : flow.get(\"fileName\"),\n    \"headers\" : flow.get(\"Headers\")\n};\nmsg.tags = flow.get(\"Parameters\").tagNames;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "f461ad0063ea5c3c"
            ]
        ]
    },
    {
        "id": "f461ad0063ea5c3c",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "globals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 220,
        "wires": []
    },
    {
        "id": "9e42fc879ddd971a",
        "type": "file",
        "z": "9d61395e.8839f8",
        "name": "Test2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1950,
        "y": 1080,
        "wires": [
            [
                "12cb5038c90f74a8"
            ]
        ]
    },
    {
        "id": "d4fdb764e35146bc",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "csv",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp, Player1, Player2, Player3",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1610,
        "y": 1060,
        "wires": [
            [
                "9d6c93586cba78c9"
            ]
        ]
    },
    {
        "id": "bc880691444c13f7",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "B CSV data (NE)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b419b0a34c428750",
        "type": "switch",
        "z": "9d61395e.8839f8",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 1080,
        "wires": [
            [
                "2b68b006ef816ef6"
            ],
            [
                "99f6945ebe04c443"
            ]
        ]
    },
    {
        "id": "a08d5412b75048a2",
        "type": "csv",
        "z": "9d61395e.8839f8",
        "name": "csv",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp, Player1, Player2, Player3",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1610,
        "y": 1100,
        "wires": [
            [
                "9d6c93586cba78c9"
            ]
        ]
    },
    {
        "id": "26611ac9db4f60d3",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "B CSV data (E)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2b68b006ef816ef6",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "file =! exist",
        "func": "msg.payload = msg.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1060,
        "wires": [
            [
                "d4fdb764e35146bc",
                "bc880691444c13f7"
            ]
        ]
    },
    {
        "id": "99f6945ebe04c443",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "file == exist",
        "func": "msg.payload = msg.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1100,
        "wires": [
            [
                "a08d5412b75048a2",
                "26611ac9db4f60d3"
            ]
        ]
    },
    {
        "id": "0bba2c74fd304a31",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "B File lister",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1160,
        "wires": []
    },
    {
        "id": "20a37dd7cb985d7b",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Config",
        "func": "msg.filename = flow.get(\"fullFileName\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1080,
        "wires": [
            [
                "9e42fc879ddd971a",
                "1f190d6b9271b359"
            ]
        ]
    },
    {
        "id": "1f190d6b9271b359",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "File write data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1972,
        "y": 1002,
        "wires": []
    },
    {
        "id": "3625e4397968ea0d",
        "type": "fs-file-lister",
        "z": "9d61395e.8839f8",
        "name": "",
        "start": "*",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 1120,
        "y": 1080,
        "wires": [
            [
                "b419b0a34c428750",
                "0bba2c74fd304a31"
            ]
        ]
    },
    {
        "id": "12cb5038c90f74a8",
        "type": "debug",
        "z": "9d61395e.8839f8",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1080,
        "wires": []
    },
    {
        "id": "69f0720488d69b9a",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Pump1",
        "func": "msg.topic = \"Pump1\";\nmsg.data = Math.floor(Math.random() * 101);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 600,
        "wires": [
            [
                "dde9d9bfd0ec2a3e"
            ]
        ]
    },
    {
        "id": "54822742bd854559",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Pressure1",
        "func": "msg.topic = \"Pressure1\";\nmsg.data = Math.floor(Math.random() * 101);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 660,
        "wires": [
            [
                "dde9d9bfd0ec2a3e"
            ]
        ]
    },
    {
        "id": "f209aef61e9e8d7a",
        "type": "function",
        "z": "9d61395e.8839f8",
        "name": "Fan1",
        "func": "msg.topic = \"Fan1\";\nmsg.data = Math.floor(Math.random() * 101);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 720,
        "wires": [
            [
                "dde9d9bfd0ec2a3e"
            ]
        ]
    },
    {
        "id": "e3a2a3cde0471f1a",
        "type": "delay",
        "z": "9d61395e.8839f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "85a031f44be5b297"
            ]
        ]
    },
    {
        "id": "f2ce3cc8eebc4ba7",
        "type": "delay",
        "z": "9d61395e.8839f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 480,
        "wires": [
            [
                "9cb14593de365b4f"
            ]
        ]
    },
    {
        "id": "b0149a5f8e0ed871",
        "type": "delay",
        "z": "9d61395e.8839f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 540,
        "wires": [
            [
                "034e8820a3a1fc6b"
            ]
        ]
    },
    {
        "id": "5308face01c6f710",
        "type": "delay",
        "z": "9d61395e.8839f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 600,
        "wires": [
            [
                "69f0720488d69b9a"
            ]
        ]
    },
    {
        "id": "cb2f0d98797012b1",
        "type": "delay",
        "z": "9d61395e.8839f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 660,
        "wires": [
            [
                "54822742bd854559"
            ]
        ]
    },
    {
        "id": "e9878eeaa57e6927",
        "type": "delay",
        "z": "9d61395e.8839f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 720,
        "wires": [
            [
                "f209aef61e9e8d7a"
            ]
        ]
    },
    {
        "id": "ab58ed9e33324a86",
        "type": "inject",
        "z": "9d61395e.8839f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "e3a2a3cde0471f1a",
                "f2ce3cc8eebc4ba7",
                "b0149a5f8e0ed871",
                "5308face01c6f710",
                "cb2f0d98797012b1",
                "e9878eeaa57e6927"
            ]
        ]
    },
    {
        "id": "559927ec63843cd6",
        "type": "comment",
        "z": "9d61395e.8839f8",
        "name": "Note for tags",
        "info": "• tags have to have their topic be the \n    same as the database headings\n• timestamp is saved as \"LongTime\" for\n    keyword reasons",
        "x": 480,
        "y": 380,
        "wires": []
    },
    {
        "id": "cf2145fe.77fbf",
        "type": "inject",
        "z": "731de46a.7645fc",
        "name": "Read 16bit Integer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "6c77da4a.e908b4",
                "97cea9e.2f7c2d8"
            ]
        ]
    },
    {
        "id": "97cea9e.2f7c2d8",
        "type": "function",
        "z": "731de46a.7645fc",
        "name": "",
        "func": "var fc=3;\nvar sa=0;\nvar addresses=1;\n//var slave_ip=msg.payload.slave_ip;\n//msg.slave_ip=\"192.168.1.31\";\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 140,
        "wires": [
            [
                "409e22ed.adb1d4"
            ]
        ]
    },
    {
        "id": "409e22ed.adb1d4",
        "type": "modbus-flex-getter",
        "z": "731de46a.7645fc",
        "name": "local getter Flex",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 360,
        "y": 140,
        "wires": [
            [],
            [
                "a067fb1d.a06cd8",
                "3ffc5f1d.0128c"
            ]
        ]
    },
    {
        "id": "6c77da4a.e908b4",
        "type": "modbus-getter",
        "z": "731de46a.7645fc",
        "name": "Holding register",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "1",
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 360,
        "y": 300,
        "wires": [
            [],
            [
                "520526c9.6cdd3"
            ]
        ]
    },
    {
        "id": "a067fb1d.a06cd8",
        "type": "function",
        "z": "731de46a.7645fc",
        "name": "",
        "func": "const buf= Buffer.from(msg.payload.buffer)\n//const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt16BE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 220,
        "wires": [
            [
                "aa2ba76.1d72fd8"
            ]
        ]
    },
    {
        "id": "520526c9.6cdd3",
        "type": "modbus-response",
        "z": "731de46a.7645fc",
        "name": "",
        "registerShowMax": 20,
        "x": 550,
        "y": 360,
        "wires": []
    },
    {
        "id": "3ffc5f1d.0128c",
        "type": "modbus-response",
        "z": "731de46a.7645fc",
        "name": "",
        "registerShowMax": 20,
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "aa2ba76.1d72fd8",
        "type": "debug",
        "z": "731de46a.7645fc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 180,
        "wires": []
    },
    {
        "id": "ad528539.ccb86",
        "type": "modbus-getter",
        "z": "731de46a.7645fc",
        "name": "Coils",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "6",
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 270,
        "y": 620,
        "wires": [
            [],
            [
                "18af1499.c68603",
                "20f1025a.d9893e"
            ]
        ]
    },
    {
        "id": "18af1499.c68603",
        "type": "modbus-response",
        "z": "731de46a.7645fc",
        "name": "",
        "registerShowMax": 20,
        "x": 570,
        "y": 700,
        "wires": []
    },
    {
        "id": "ef043d4f.7959",
        "type": "inject",
        "z": "731de46a.7645fc",
        "name": "Read coils",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 680,
        "wires": [
            [
                "ad528539.ccb86"
            ]
        ]
    },
    {
        "id": "20f1025a.d9893e",
        "type": "function",
        "z": "731de46a.7645fc",
        "name": "Process data",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "133ebf4f.3e9409",
        "type": "inject",
        "z": "731de46a.7645fc",
        "name": "Read multiple",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "f1e84475.ab3838"
            ]
        ]
    },
    {
        "id": "f1e84475.ab3838",
        "type": "modbus-getter",
        "z": "731de46a.7645fc",
        "name": "Read multiple",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "4",
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 350,
        "y": 460,
        "wires": [
            [],
            [
                "f9357b62.4bd2d"
            ]
        ]
    },
    {
        "id": "f9357b62.4bd2d",
        "type": "modbus-response",
        "z": "731de46a.7645fc",
        "name": "",
        "registerShowMax": 20,
        "x": 590,
        "y": 520,
        "wires": []
    },
    {
        "id": "dfed358e.ff2698",
        "type": "modbus-read",
        "z": "731de46a.7645fc",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 20,
        "wires": [
            [],
            [
                "b7a929bc.2c2298"
            ]
        ]
    },
    {
        "id": "b7a929bc.2c2298",
        "type": "debug",
        "z": "731de46a.7645fc",
        "name": "Modbus Read",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "values",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 20,
        "wires": []
    },
    {
        "id": "d74755b3c6352a6e",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Read 32bit Float",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "0f8e384b518265ac"
            ]
        ]
    },
    {
        "id": "433b516ee310fe52",
        "type": "modbus-flex-getter",
        "z": "dd749ff055035503",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 510,
        "y": 40,
        "wires": [
            [],
            [
                "1510c156fc2062a5"
            ]
        ]
    },
    {
        "id": "125b1e6d18e88436",
        "type": "debug",
        "z": "dd749ff055035503",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "e97d10ae49fd6218",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "16 Bit INT 16001",
        "func": "var fc=3;\nvar sa=3;\nvar addresses=1;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip=\"192.168.1.31\";\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "433b516ee310fe52"
            ]
        ]
    },
    {
        "id": "627e1fcddc022031",
        "type": "modbus-flex-write",
        "z": "dd749ff055035503",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "54dde46e.53267c",
        "x": 590,
        "y": 1240,
        "wires": [
            [],
            [
                "9b86bf09dd824a61"
            ]
        ]
    },
    {
        "id": "cb1af7e3e7c342f6",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "Write-Float -6001.5",
        "func": "var buf;\nvar fc=16;\nvar sa=10;\nvar addresses=2;\nvar value=4.7;\nbuf=Buffer.alloc(4);\nbuf.writeFloatBE(value);\n//buf.writeFloatBE(16001.5);\nvar values=[(buf[0]*256+buf[1]),(buf[2]*256)+buf[3]]\nmsg.slave_ip=\"192.168.1.31\";\nmsg.payload={\"value\":values , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "627e1fcddc022031"
            ]
        ]
    },
    {
        "id": "9b86bf09dd824a61",
        "type": "debug",
        "z": "dd749ff055035503",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 850,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a8ade5e22f4319fc",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Read 16bit Integer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 20,
        "wires": [
            [
                "e97d10ae49fd6218"
            ]
        ]
    },
    {
        "id": "1510c156fc2062a5",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt16BE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "125b1e6d18e88436"
            ]
        ]
    },
    {
        "id": "7e0fb083f17a7e2b",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Write32Float",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 1220,
        "wires": [
            [
                "cb1af7e3e7c342f6"
            ]
        ]
    },
    {
        "id": "d9514503ae25aa28",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Read 32bit Integer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "4a8494fe9776580a"
            ]
        ]
    },
    {
        "id": "8020fc0e534c3236",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt32BE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 320,
        "wires": [
            [
                "125b1e6d18e88436"
            ]
        ]
    },
    {
        "id": "4690c4370d34864b",
        "type": "modbus-flex-getter",
        "z": "dd749ff055035503",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 450,
        "y": 240,
        "wires": [
            [],
            [
                "8020fc0e534c3236"
            ]
        ]
    },
    {
        "id": "4a8494fe9776580a",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "32bit int",
        "func": "var fc=3;\nvar sa=5;\nvar addresses=2;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip=\"192.168.1.31\";\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 200,
        "wires": [
            [
                "4690c4370d34864b"
            ]
        ]
    },
    {
        "id": "0f8e384b518265ac",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "32Bit Float ",
        "func": "var fc=3;\nvar sa=10;\nvar addresses=2;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip=\"192.168.1.55\";\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 640,
        "wires": [
            [
                "c49bc44e45c1bbe4"
            ]
        ]
    },
    {
        "id": "c49bc44e45c1bbe4",
        "type": "modbus-flex-getter",
        "z": "dd749ff055035503",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 490,
        "y": 640,
        "wires": [
            [],
            [
                "296c8fcb7fcd218e"
            ]
        ]
    },
    {
        "id": "296c8fcb7fcd218e",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "125b1e6d18e88436"
            ]
        ]
    },
    {
        "id": "425faad7b490a19d",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Write32INT",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1120,
        "wires": [
            [
                "502adf8870b9c3dc"
            ]
        ]
    },
    {
        "id": "502adf8870b9c3dc",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "write 100-32 bit",
        "func": "\nvar fc=16;\nvar sa=50;\nvar addresses=2;\nvar buf=Buffer.alloc(4);\nbuf.writeInt32BE(68001);\nvar values=[(buf[0]*256+buf[1]),(buf[2]*256)+buf[3]]\nmsg.slave_ip=\"192.168.1.76\";\nmsg.payload={\"value\":values , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1140,
        "wires": [
            [
                "03bc2751fba763b5",
                "9b86bf09dd824a61"
            ]
        ]
    },
    {
        "id": "03bc2751fba763b5",
        "type": "modbus-flex-write",
        "z": "dd749ff055035503",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "54dde46e.53267c",
        "x": 590,
        "y": 1180,
        "wires": [
            [],
            [
                "9b86bf09dd824a61"
            ]
        ]
    },
    {
        "id": "f8d52125799ef620",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Write16INT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1020,
        "wires": [
            [
                "e46b8b34155241b0"
            ]
        ]
    },
    {
        "id": "e46b8b34155241b0",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "Write 16001-16bit",
        "func": "\nvar fc=6;\nvar sa=3;\nvar addresses=1;\nvar value=250;\n\n//msg.slave_ip =\"192.168.1.55\";\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1040,
        "wires": [
            [
                "9aa2df57481a179a"
            ]
        ]
    },
    {
        "id": "9aa2df57481a179a",
        "type": "modbus-flex-write",
        "z": "dd749ff055035503",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 1060,
        "wires": [
            [],
            [
                "9b86bf09dd824a61"
            ]
        ]
    },
    {
        "id": "076fa91c324a5c11",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Buffer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "81d37413b5c15258"
            ]
        ]
    },
    {
        "id": "81d37413b5c15258",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "16 Bit INT 16001",
        "func": "msg.payload={};\nvar buf=Buffer.alloc(2);\nbuf.writeInt16BE(16001);\nmsg.payload.buffer=buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "1510c156fc2062a5"
            ]
        ]
    },
    {
        "id": "7adf843a9fbc8b42",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "32 bit INT 16001",
        "func": "msg.payload={};\nvar buf=Buffer.alloc(4);\nbuf.writeInt32BE(16001);\nmsg.payload.buffer=buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 300,
        "wires": [
            [
                "8020fc0e534c3236"
            ]
        ]
    },
    {
        "id": "6cde19eb8d9acb38",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Buffer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "7adf843a9fbc8b42"
            ]
        ]
    },
    {
        "id": "9688150c5c0c0823",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "32Bit Float 16001.5",
        "func": "msg.payload={};\nvar buf=Buffer.alloc(4);\nbuf.writeFloatBE(16001.5);\nmsg.payload.buffer=buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 720,
        "wires": [
            [
                "296c8fcb7fcd218e"
            ]
        ]
    },
    {
        "id": "ead1596f3831cb72",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Buffer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "9688150c5c0c0823"
            ]
        ]
    },
    {
        "id": "673055bc925c4994",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Read 32bit Integer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 360,
        "wires": [
            [
                "b0e849b1999655ca"
            ]
        ]
    },
    {
        "id": "bad53911f30f3d5a",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Buffer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 540,
        "wires": [
            [
                "d00fc36fcc5bda56"
            ]
        ]
    },
    {
        "id": "d00fc36fcc5bda56",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "32 bit INT 68001",
        "func": "msg.payload={};\nvar buf=Buffer.alloc(4);\nbuf.writeInt32BE(68001);\nmsg.payload.buffer=buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 540,
        "wires": [
            [
                "ebbe15c9e799a9f1"
            ]
        ]
    },
    {
        "id": "b0e849b1999655ca",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "32bit int",
        "func": "var fc=3;\nvar sa=7;\nvar addresses=2;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip=\"192.168.1.31\";\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 420,
        "wires": [
            [
                "98811db8b7bd4c3b"
            ]
        ]
    },
    {
        "id": "98811db8b7bd4c3b",
        "type": "modbus-flex-getter",
        "z": "dd749ff055035503",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 510,
        "y": 440,
        "wires": [
            [],
            [
                "ebbe15c9e799a9f1"
            ]
        ]
    },
    {
        "id": "ebbe15c9e799a9f1",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt32BE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "125b1e6d18e88436"
            ]
        ]
    },
    {
        "id": "5f1b100a47dfd51f",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Read 62bit Float",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 840,
        "wires": [
            [
                "e9fb775b633d19bd"
            ]
        ]
    },
    {
        "id": "86e73de28b0c8ba3",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Buffer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "3dc8b64e9f58f2a4"
            ]
        ]
    },
    {
        "id": "e9fb775b633d19bd",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "64Bit Float ",
        "func": "var fc=3;\nvar sa=20;\nvar addresses=4;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip=\"192.168.1.31\";\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 820,
        "wires": [
            [
                "cfcc58256717e25b"
            ]
        ]
    },
    {
        "id": "3dc8b64e9f58f2a4",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "64Bit Float 16001.5",
        "func": "msg.payload={};\nvar buf=Buffer.alloc(8);\nbuf.writeDoubleBE(16001.5);\nmsg.payload.buffer=buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 900,
        "wires": [
            [
                "15944790af939c03"
            ]
        ]
    },
    {
        "id": "cfcc58256717e25b",
        "type": "modbus-flex-getter",
        "z": "dd749ff055035503",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 510,
        "y": 820,
        "wires": [
            [],
            [
                "15944790af939c03"
            ]
        ]
    },
    {
        "id": "15944790af939c03",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readDoubleBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 900,
        "wires": [
            [
                "9b86bf09dd824a61"
            ]
        ]
    },
    {
        "id": "425449a3b7080429",
        "type": "inject",
        "z": "dd749ff055035503",
        "name": "Write64Float",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1320,
        "wires": [
            [
                "cffd9ebf48042f91"
            ]
        ]
    },
    {
        "id": "cffd9ebf48042f91",
        "type": "function",
        "z": "dd749ff055035503",
        "name": "Write-Float -16001.5",
        "func": "\nvar fc=16;\nvar sa=80;\nvar addresses=4;\nvar value=16001.5;\nbuf=Buffer.alloc(8);\nbuf.writeDoubleBE(value);\n//buf.writeFloatBE(16001.5);\nvar values=[(buf[0]*256+buf[1]),(buf[2]*256)+buf[3],(buf[4]*256+buf[5]),(buf[6]*256)+buf[7]];\n\nmsg.slave_ip=\"192.168.1.76\";\nmsg.payload={\"value\":values , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1320,
        "wires": [
            [
                "92f0f7349040870d"
            ]
        ]
    },
    {
        "id": "92f0f7349040870d",
        "type": "modbus-flex-write",
        "z": "dd749ff055035503",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "54dde46e.53267c",
        "x": 570,
        "y": 1340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c9f45b8de2b87d87",
        "type": "mqtt in",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Slider",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ad6dcc65156dd01c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 440,
        "wires": [
            [
                "5fcec87093e44f5e"
            ]
        ]
    },
    {
        "id": "b2d5dfce2a432480",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write Float 2W",
        "func": "var buf;\nvar fc=16;\nvar sa=10;\nvar addresses=2;\nvar value=msg.payload;\nbuf=Buffer.alloc(4);\nbuf.writeFloatBE(value);\n//buf.writeFloatBE(16001.5);\nvar values=[(buf[0]*256+buf[1]),(buf[2]*256)+buf[3]]\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":values , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            [
                "54c48fb108cfd7e9"
            ]
        ]
    },
    {
        "id": "54c48fb108cfd7e9",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 550,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5fcec87093e44f5e",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write Int 2W",
        "func": "\nvar fc=6;\nvar sa=0;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 500,
        "wires": [
            [
                "2a791891f9a601b6"
            ]
        ]
    },
    {
        "id": "2a791891f9a601b6",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 550,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "02d59aadccc9e56d",
        "type": "inject",
        "z": "daaea0a7a0d2dd9e",
        "name": "1 sec inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "7dcbe51d10b8eae3"
            ]
        ]
    },
    {
        "id": "8fa2d634862fc644",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Read Float 2W",
        "func": "var fc=3;\nvar sa=10;\nvar addresses=2;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip= flow.get(\"slaveIP\");\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 300,
        "wires": [
            [
                "f69650b41f55f3f0"
            ]
        ]
    },
    {
        "id": "f69650b41f55f3f0",
        "type": "modbus-flex-getter",
        "z": "daaea0a7a0d2dd9e",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 530,
        "y": 300,
        "wires": [
            [],
            [
                "77cae1d33e3c75d8"
            ]
        ]
    },
    {
        "id": "77cae1d33e3c75d8",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set Float 2W",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "b490e70e1cd702b3"
            ]
        ]
    },
    {
        "id": "cad8bcebdfbd03a6",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set Int 1W",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt16BE();\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 360,
        "wires": [
            [
                "b490e70e1cd702b3"
            ]
        ]
    },
    {
        "id": "6e6e628c933055fa",
        "type": "ui_slider",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "3d695ddc4ae8ac52",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": 10,
        "step": "1",
        "className": "",
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "8a6731fa2e4b3402",
                "7c4143395d5b9021"
            ]
        ]
    },
    {
        "id": "c0458ac1c291952d",
        "type": "ui_gauge",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "group": "8f328fb03c98744c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 240,
        "wires": []
    },
    {
        "id": "0d6084f43baf90f6",
        "type": "modbus-flex-getter",
        "z": "daaea0a7a0d2dd9e",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 530,
        "y": 360,
        "wires": [
            [],
            [
                "cad8bcebdfbd03a6"
            ]
        ]
    },
    {
        "id": "35a5b110d4ea6582",
        "type": "mqtt out",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Slider",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ad6dcc65156dd01c",
        "x": 1430,
        "y": 300,
        "wires": []
    },
    {
        "id": "7dcbe51d10b8eae3",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Read Int 1W",
        "func": "var fc=3;\nvar sa=0;\nvar addresses=1;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 360,
        "wires": [
            [
                "0d6084f43baf90f6"
            ]
        ]
    },
    {
        "id": "765d150896145cf9",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "pay = val",
        "func": "msg.payload = msg.payload.data[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 980,
        "wires": [
            [
                "045478d22e33f457"
            ]
        ]
    },
    {
        "id": "8695fee2865df155",
        "type": "ui_switch",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "label": "Pump1",
        "tooltip": "",
        "group": "3d695ddc4ae8ac52",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "power_settings_new",
        "oncolor": "red",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "power_settings_new",
        "offcolor": "green",
        "animate": false,
        "className": "",
        "x": 980,
        "y": 980,
        "wires": [
            [
                "27235108a793075a",
                "f1443fea8ce51a7e"
            ]
        ]
    },
    {
        "id": "7a16ee103ed86d3c",
        "type": "modbus-flex-getter",
        "z": "daaea0a7a0d2dd9e",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 450,
        "y": 980,
        "wires": [
            [],
            [
                "765d150896145cf9"
            ]
        ]
    },
    {
        "id": "15c7b6b121e17f3a",
        "type": "mqtt out",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Pumps/1",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ad6dcc65156dd01c",
        "x": 1300,
        "y": 920,
        "wires": []
    },
    {
        "id": "e4ecbc3180672601",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Read coil",
        "func": "var fc=1;\nvar sa=101;\nvar addresses=1;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 980,
        "wires": [
            [
                "7a16ee103ed86d3c"
            ]
        ]
    },
    {
        "id": "27235108a793075a",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "if (msg.receivedFrom == undefined) {\n    return msg;\n}\n\nvar previous = context.get(\"previous\");\nmsg.previous = previous;\nif (msg.receivedFrom == \"InjectedFromPLC\") {\n    if (previous != msg.payload) {\n        context.set(\"previous\", msg.payload);\n        return msg;\n    }\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 920,
        "wires": [
            [
                "15c7b6b121e17f3a"
            ]
        ]
    },
    {
        "id": "b15c0be8f1f1acff",
        "type": "mqtt in",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Pumps/1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ad6dcc65156dd01c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1040,
        "wires": [
            [
                "e31e5155e5c5c7a6"
            ]
        ]
    },
    {
        "id": "08c9afed49e593c6",
        "type": "inject",
        "z": "daaea0a7a0d2dd9e",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "e4ecbc3180672601"
            ]
        ]
    },
    {
        "id": "e44454ee71bb154d",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write coil",
        "func": "\nvar fc=5;\nvar sa=101;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1040,
        "wires": [
            [
                "d04987ec24460960"
            ]
        ]
    },
    {
        "id": "d04987ec24460960",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1040,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "37ef52192c9954d7",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "check",
        "func": "var check = context.get(\"check\");\nif (check == undefined) {\n    context.set(\"check\", false);\n    check = false;\n}\n\nif (msg.payload[\"Pump1Status\"]) {\n    if (msg.payload[\"Slider\"] > 8 && check == false) {\n        context.set(\"check\", true);\n        msg.payload = \"Pump1 is running high\"\n        return msg;\n    } else if (msg.payload[\"Slider\"] < 2 && check == false) {\n        context.set(\"check\", true);\n        msg.payload = \"Pump1 is running low\"\n        return msg;\n    } else if (msg.payload[\"Slider\"] <= 8 && msg.payload[\"Slider\"] >= 2 && check == true) {\n        msg.payload = \"Pumps running normally\"\n        context.set(\"check\", false);\n        return msg;\n    }\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 620,
        "wires": [
            [
                "0d640be9d9ab6a45",
                "2acbe957754a27eb"
            ]
        ]
    },
    {
        "id": "0d640be9d9ab6a45",
        "type": "mqtt out",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Pumps/status",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ad6dcc65156dd01c",
        "x": 990,
        "y": 680,
        "wires": []
    },
    {
        "id": "3217451bc0848353",
        "type": "mqtt in",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Pumps/1/UpperLimit",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ad6dcc65156dd01c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1480,
        "wires": [
            [
                "0b72fd29627746e6"
            ]
        ]
    },
    {
        "id": "05010ad599aa18c6",
        "type": "mqtt in",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Pumps/1/LowerLimit",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ad6dcc65156dd01c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1540,
        "wires": [
            [
                "9cf264f159d72357"
            ]
        ]
    },
    {
        "id": "0b72fd29627746e6",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "pay = val",
        "func": "flow.set(\"Pump1UpperLimit\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1480,
        "wires": [
            [
                "93b96276ab761d76"
            ]
        ]
    },
    {
        "id": "9cf264f159d72357",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "pay = val",
        "func": "flow.set(\"Pump1LowerLimit\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "93b96276ab761d76",
        "type": "debug",
        "z": "daaea0a7a0d2dd9e",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1480,
        "wires": []
    },
    {
        "id": "2acbe957754a27eb",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "pay = val",
        "func": "if (msg.payload == \"Pump1 is running high\") {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 620,
        "wires": [
            [
                "b91b1d2dc804c95b",
                "edc0d68431e1758c"
            ]
        ]
    },
    {
        "id": "b91b1d2dc804c95b",
        "type": "mqtt out",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Fans/1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ad6dcc65156dd01c",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "045478d22e33f457",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set tag",
        "func": "msg.receivedFrom = \"InjectedFromPLC\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 980,
        "wires": [
            [
                "8695fee2865df155"
            ]
        ]
    },
    {
        "id": "e31e5155e5c5c7a6",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1040,
        "wires": [
            [
                "e44454ee71bb154d"
            ]
        ]
    },
    {
        "id": "9b43e8deed662d42",
        "type": "comment",
        "z": "daaea0a7a0d2dd9e",
        "name": "Slider (int or float) ",
        "info": "",
        "x": 120,
        "y": 240,
        "wires": []
    },
    {
        "id": "088fad9a6ecd8bf4",
        "type": "comment",
        "z": "daaea0a7a0d2dd9e",
        "name": "Coil Switch (Pump1)",
        "info": "",
        "x": 110,
        "y": 900,
        "wires": []
    },
    {
        "id": "f0f029342a4b7aec",
        "type": "comment",
        "z": "daaea0a7a0d2dd9e",
        "name": "conditional switching (Working on)",
        "info": "",
        "x": 180,
        "y": 560,
        "wires": []
    },
    {
        "id": "cb817ad128af8309",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set alarm variable",
        "func": "flow.set(\"Slider\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7ee410bcea9c5255",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Call value(s)",
        "func": "msg.payload = flow.get(\"Slider\");\nmsg.topic = \"Slider\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 620,
        "wires": [
            [
                "3ebb7b899fa282c1"
            ]
        ]
    },
    {
        "id": "f1443fea8ce51a7e",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "if (msg.receivedFrom == undefined) {\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 980,
        "wires": [
            [
                "52119070236c0273"
            ]
        ]
    },
    {
        "id": "52119070236c0273",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write coil",
        "func": "\nvar fc=5;\nvar sa=101;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 980,
        "wires": [
            [
                "65475b006d18ca42"
            ]
        ]
    },
    {
        "id": "65475b006d18ca42",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1470,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b490e70e1cd702b3",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set tag",
        "func": "msg.receivedFrom = \"InjectedFromPLC\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 300,
        "wires": [
            [
                "6e6e628c933055fa",
                "c0458ac1c291952d",
                "cb817ad128af8309"
            ]
        ]
    },
    {
        "id": "8a6731fa2e4b3402",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "if (msg.receivedFrom == undefined) {\n    return msg;\n}\n\nvar previous = context.get(\"previous\");\nmsg.previous = previous;\nif (msg.receivedFrom == \"InjectedFromPLC\") {\n    if (previous != msg.payload) {\n        context.set(\"previous\", msg.payload);\n        return msg;\n    }\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 300,
        "wires": [
            [
                "35a5b110d4ea6582"
            ]
        ]
    },
    {
        "id": "7c4143395d5b9021",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "if (msg.receivedFrom == undefined) {\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 380,
        "wires": [
            [
                "d6d862314ad5069c"
            ]
        ]
    },
    {
        "id": "24a2a111478a391c",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write Float 2W",
        "func": "var buf;\nvar fc=16;\nvar sa=10;\nvar addresses=2;\nvar value=msg.payload;\nbuf=Buffer.alloc(4);\nbuf.writeFloatBE(value);\n//buf.writeFloatBE(16001.5);\nvar values=[(buf[0]*256+buf[1]),(buf[2]*256)+buf[3]]\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":values , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 360,
        "wires": [
            [
                "1fd2b0ad88895d4c"
            ]
        ]
    },
    {
        "id": "1fd2b0ad88895d4c",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1650,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d6d862314ad5069c",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write Int 1W",
        "func": "\nvar fc=6;\nvar sa=0;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 440,
        "wires": [
            [
                "e81fb2b1a9e0bea8"
            ]
        ]
    },
    {
        "id": "e81fb2b1a9e0bea8",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1650,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9b0dbc663dca079d",
        "type": "inject",
        "z": "daaea0a7a0d2dd9e",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1280,
        "wires": [
            [
                "445dd498cd40a75a"
            ]
        ]
    },
    {
        "id": "445dd498cd40a75a",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Read coil",
        "func": "var fc=1;\nvar sa=100;\nvar addresses=1;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1280,
        "wires": [
            [
                "0fc68aa529b2eb8d"
            ]
        ]
    },
    {
        "id": "0fc68aa529b2eb8d",
        "type": "modbus-flex-getter",
        "z": "daaea0a7a0d2dd9e",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 1280,
        "wires": [
            [],
            [
                "5cdc0a9e314c7f50"
            ]
        ]
    },
    {
        "id": "5cdc0a9e314c7f50",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "pay = val",
        "func": "msg.payload = msg.payload.data[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1280,
        "wires": [
            [
                "2f7e0b2215c674ee"
            ]
        ]
    },
    {
        "id": "2f7e0b2215c674ee",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set tag",
        "func": "msg.receivedFrom = \"InjectedFromPLC\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1280,
        "wires": [
            [
                "a6eb5d3d1380e352"
            ]
        ]
    },
    {
        "id": "a6eb5d3d1380e352",
        "type": "ui_switch",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "label": "Fan1",
        "tooltip": "",
        "group": "3d695ddc4ae8ac52",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "f54bd45a31209dff",
                "898aee761faa2141"
            ]
        ]
    },
    {
        "id": "f54bd45a31209dff",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "if (msg.receivedFrom == undefined) {\n    return msg;\n}\n\nvar previous = context.get(\"previous\");\nmsg.previous = previous;\nif (msg.receivedFrom == \"InjectedFromPLC\") {\n    if (previous != msg.payload) {\n        context.set(\"previous\", msg.payload);\n        return msg;\n    }\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1220,
        "wires": [
            [
                "ad243a447ba48228"
            ]
        ]
    },
    {
        "id": "898aee761faa2141",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "if (msg.receivedFrom == undefined) {\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1280,
        "wires": [
            [
                "9708a2f261349381"
            ]
        ]
    },
    {
        "id": "ad243a447ba48228",
        "type": "mqtt out",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Fans/1",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ad6dcc65156dd01c",
        "x": 1270,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9708a2f261349381",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write coil",
        "func": "\nvar fc=5;\nvar sa=100;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1280,
        "wires": [
            [
                "d84f82decb19ca96"
            ]
        ]
    },
    {
        "id": "d84f82decb19ca96",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1450,
        "y": 1280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "73182919f10fef5f",
        "type": "mqtt in",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "topic": "Test/Fans/1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ad6dcc65156dd01c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1340,
        "wires": [
            [
                "e39326f4e1d6a9ed"
            ]
        ]
    },
    {
        "id": "e39326f4e1d6a9ed",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "switch",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1340,
        "wires": [
            [
                "e5ebe049c179cddb"
            ]
        ]
    },
    {
        "id": "e5ebe049c179cddb",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write coil",
        "func": "\nvar fc=5;\nvar sa=100;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1340,
        "wires": [
            [
                "9fbba71bfc5936c2"
            ]
        ]
    },
    {
        "id": "9fbba71bfc5936c2",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 630,
        "y": 1340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e46353701506f04f",
        "type": "comment",
        "z": "daaea0a7a0d2dd9e",
        "name": "Coil Switch (Fan1)",
        "info": "",
        "x": 110,
        "y": 1200,
        "wires": []
    },
    {
        "id": "edc0d68431e1758c",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Write coil",
        "func": "\nvar fc=5;\nvar sa=100;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 620,
        "wires": [
            [
                "6720475200185d9c"
            ]
        ]
    },
    {
        "id": "6720475200185d9c",
        "type": "modbus-flex-write",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "54dde46e.53267c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1350,
        "y": 620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c3762a7345ac1e9e",
        "type": "comment",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set Flow Var",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "39533e0e41110b85",
        "type": "inject",
        "z": "daaea0a7a0d2dd9e",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "f908dde3ab4745bb"
            ]
        ]
    },
    {
        "id": "f908dde3ab4745bb",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Set Flow Par",
        "func": "flow.set(\"slaveIP\", \"192.168.101.253\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e1b4a630ac0978d8",
        "type": "modbus-flex-getter",
        "z": "daaea0a7a0d2dd9e",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "54dde46e.53267c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 290,
        "y": 700,
        "wires": [
            [],
            [
                "5d76a51497929aea"
            ]
        ]
    },
    {
        "id": "3ee14fb2a10e1404",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "Read coil",
        "func": "var fc=1;\nvar sa=101;\nvar addresses=1;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 700,
        "wires": [
            [
                "e1b4a630ac0978d8"
            ]
        ]
    },
    {
        "id": "5d76a51497929aea",
        "type": "function",
        "z": "daaea0a7a0d2dd9e",
        "name": "pay = val",
        "func": "msg.payload = msg.payload.data[0];\nmsg.topic = \"Pump1Status\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 700,
        "wires": [
            [
                "3ebb7b899fa282c1"
            ]
        ]
    },
    {
        "id": "3ebb7b899fa282c1",
        "type": "join",
        "z": "daaea0a7a0d2dd9e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "37ef52192c9954d7"
            ]
        ]
    },
    {
        "id": "15237651.20281a",
        "type": "debug",
        "z": "17fd6e0f1c66137c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "84df0cd4.58462",
        "type": "inject",
        "z": "17fd6e0f1c66137c",
        "name": "Select",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "SELECT TOP (1) [Topic]       ,[Payload]   FROM [Dev].[dbo].[MQTTData]",
        "payloadType": "str",
        "x": 91.00000381469727,
        "y": 93.99999809265137,
        "wires": [
            [
                "eac3e9b1.b2f0e8"
            ]
        ]
    },
    {
        "id": "eac3e9b1.b2f0e8",
        "type": "MSSQL",
        "z": "17fd6e0f1c66137c",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 440,
        "y": 160,
        "wires": [
            [
                "15237651.20281a"
            ]
        ]
    },
    {
        "id": "ca03c5dc.709628",
        "type": "inject",
        "z": "17fd6e0f1c66137c",
        "name": "Insert",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "INSERT INTO [NodeRed].[dbo].[Basic_Test] (Topic, Payload) VALUES ('Cardinal', 'Tom B. Erichsen' )",
        "payloadType": "str",
        "x": 93,
        "y": 145,
        "wires": [
            [
                "eac3e9b1.b2f0e8"
            ]
        ]
    },
    {
        "id": "57a3215a.12b8d",
        "type": "inject",
        "z": "17fd6e0f1c66137c",
        "name": "Update",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 196,
        "wires": [
            [
                "fc1afd38.1ad0f"
            ]
        ]
    },
    {
        "id": "fc1afd38.1ad0f",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "name": "Function",
        "func": "let d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n\nlet dtstmp = new Date().toString();\nlet pld =       \"UPDATE [NodeRed].[dbo].[Basic_Test] \";\npld = pld + \"Set Timestamp = '\" + dformat + \"' \";\npld = pld + \"WHERE id = 1\";\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 196,
        "wires": [
            [
                "eac3e9b1.b2f0e8",
                "86267995b3803c8f"
            ]
        ]
    },
    {
        "id": "35b4a3e.f64c05c",
        "type": "inject",
        "z": "17fd6e0f1c66137c",
        "name": "Select",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 91,
        "y": 252,
        "wires": [
            [
                "1528d6ba.7db449"
            ]
        ]
    },
    {
        "id": "1528d6ba.7db449",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "name": "Function",
        "func": "let pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [NodeRed].[dbo].[Basic_Test] \"\npld = pld + \"WHERE id = \" + msg.payload\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 231,
        "y": 252,
        "wires": [
            [
                "eac3e9b1.b2f0e8",
                "86267995b3803c8f"
            ]
        ]
    },
    {
        "id": "38bb7577.af1c3a",
        "type": "mqtt in",
        "z": "17fd6e0f1c66137c",
        "name": "",
        "topic": "SQLTest/#",
        "qos": "0",
        "broker": "712b53e5.990dfc",
        "inputs": 0,
        "x": 82,
        "y": 302,
        "wires": [
            [
                "7eafa2f8.041ebc"
            ]
        ]
    },
    {
        "id": "7eafa2f8.041ebc",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "name": "Function",
        "func": "d = new Date(),\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n\npld =       \"INSERT INTO [Dev].[dbo].[MQTTData] \"\npld = pld + \"(Topic, Payload, Timestamp) \"\npld = pld + \"VALUES ('\" + msg.topic + \"', '\" + msg.payload + \"', '\" + dformat + \"')\"\n\nmsg.topic = ''\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 224,
        "y": 302,
        "wires": [
            [
                "eac3e9b1.b2f0e8",
                "15237651.20281a",
                "86267995b3803c8f"
            ]
        ]
    },
    {
        "id": "86267995b3803c8f",
        "type": "debug",
        "z": "17fd6e0f1c66137c",
        "name": "SQL statements",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 360,
        "wires": []
    },
    {
        "id": "bef8cd8183ccd367",
        "type": "comment",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Read CSV -> Graph (date picker)",
        "info": "",
        "x": 170,
        "y": 620,
        "wires": []
    },
    {
        "id": "1b86a4eacafb44ae",
        "type": "inject",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "c2d2a42515cd83f5"
            ]
        ]
    },
    {
        "id": "c2d2a42515cd83f5",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Read config",
        "func": "msg.filename = flow.get(\"PlayerDataFN\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 680,
        "wires": [
            [
                "a5091a6dbe21da16"
            ]
        ]
    },
    {
        "id": "a5091a6dbe21da16",
        "type": "file in",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Read Sample Data",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 680,
        "wires": [
            [
                "c82014019da70fca"
            ]
        ]
    },
    {
        "id": "c82014019da70fca",
        "type": "csv",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 650,
        "y": 680,
        "wires": [
            [
                "08f3035389cc43c5"
            ]
        ]
    },
    {
        "id": "08f3035389cc43c5",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Format data for chart & set flow",
        "func": "var chart = [{\n    \"series\":[\"YSet1\",\"YSet2\"],\n    \"data\":[],\n    \"labels\":[\"\"]\n}];\n\nvar Y1 = [];\nvar Y2 = [];\n\n//For time conversion\nlet x = \"\";\nlet y1 = \"\";\nlet y2 = \"\";\nfor (var i=0; i<msg.payload.length; i++) {\n    x = new Date(msg.payload[i][\"Time of Observation\"]);\n    //x = (x.getDay() + \" \" + x.getHours() + \":\" + x.getMinutes());\n    y1 = msg.payload[i].Longitude;\n    y2 = msg.payload[i][\"Sea Level Pressure\"];\n\n    if(x == \"\" || y1 == \"\" || y2 == \" \") {\n        continue;\n    }\n    \n    Y1.push({ \"x\": x, \"y\": y1});\n    Y2.push({ \"x\": x, \"y\": y2});\n\n}\n\nflow.set(\"check0\", msg.payload[0][\"Time of Observation\"]);\n//flow.set(\"check1\", new Date(msg.payload[0][\"Time of Observation\"]));\nflow.set(\"check1\", new Date(flow.get(\"check0\")));\nflow.set(\"check2\", new Date(flow.get(\"check1\")).toISOString());\n\n// Set available date-time picker\nflow.set(\"graphAvailableStart\", new Date(msg.payload[0][\"Time of Observation\"]).getTime());\n//flow.set(\"graphAvailableEnd\", msg.payload[msg.payload.length() - 1][\"Time of Observation\"][msg.payload.length()]);\nflow.set(\"graphAvailableEnd\", new Date(msg.payload[msg.payload.length - 1][\"Time of Observation\"]).getTime());\n//chart[0].data.push(Y1);\nchart[0].data.push(Y2);\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 680,
        "wires": [
            [
                "3a520ee0804eb844",
                "895a68a939600cd5"
            ]
        ]
    },
    {
        "id": "3a520ee0804eb844",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Call var",
        "func": "msg = {\n    \"payload\" : {\n        \"Start\": flow.get(\"graphAvailableStart\"),\n        \"End\": flow.get(\"graphAvailableEnd\")\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 680,
        "wires": [
            [
                "58979c15d4747672"
            ]
        ]
    },
    {
        "id": "895a68a939600cd5",
        "type": "ui_chart",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "",
        "group": "8bb4869336244573",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "58979c15d4747672",
        "type": "split",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1280,
        "y": 680,
        "wires": [
            [
                "82d9a6e4b26e5770"
            ]
        ]
    },
    {
        "id": "9a11a81f559f9515",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Format data for chart & set flow",
        "func": "var chart = [{\n    \"series\":[\"YSet1\",\"YSet2\"],\n    \"data\":[],\n    \"labels\":[\"\"]\n}];\n\nvar Y1 = [];\nvar Y2 = [];\n\n//For time conversion\nlet x = \"\";\nlet y1 = \"\";\nlet y2 = \"\";\nfor (var i=0; i<msg.payload.length; i++) {\n    x = new Date(msg.payload[i][\"Time of Observation\"]);\n    //x = (x.getDay() + \" \" + x.getHours() + \":\" + x.getMinutes());\n\n    //Refine: \n    if (x.getTime() < new Date(flow.get(\"graphStart\")).getTime()) {\n        continue;\n    } else if (x.getTime() > new Date(flow.get(\"graphEnd\"))) {\n        break;\n    }\n\n    y1 = msg.payload[i].Longitude;\n    y2 = msg.payload[i][\"Sea Level Pressure\"];\n\n    if(x == \"\" || y1 == \"\" || y2 == \" \") {\n        continue;\n    }\n    \n    Y1.push({ \"x\": x, \"y\": y1});\n    Y2.push({ \"x\": x, \"y\": y2});\n\n}\n/*\n//Testing\nlet start = new Date(flow.get(\"availableGraphStart\"));/*.toLocaleDateString(undefined, {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n});*/\n\n//select graph section test\nmsg.check = (new Date(flow.get(\"graphAvailableStart\")).getTime() < new Date(flow.get(\"graphStart\")).getTime());\nif(new Date(flow.get(\"graphAvailableStart\")).getTime() < new Date(flow.get(\"graphStart\")).getTime()) {\n    //continue;\n}\n\nflow.set(\"check0\", msg.payload[0][\"Time of Observation\"]);\n//flow.set(\"check1\", new Date(msg.payload[0][\"Time of Observation\"]));\nflow.set(\"check1\", new Date(flow.get(\"check0\")));\nflow.set(\"check2\", new Date(flow.get(\"check1\")).toISOString());\n\n// Set available date-time picker\nflow.set(\"graphAvailableStart\", msg.payload[0][\"Time of Observation\"]);\n//flow.set(\"graphAvailableEnd\", msg.payload[msg.payload.length() - 1][\"Time of Observation\"][msg.payload.length()]);\nflow.set(\"graphAvailableEnd\", msg.payload[msg.payload.length - 1][\"Time of Observation\"]);\n//chart[0].data.push(Y1);\nchart[0].data.push(Y2);\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 760,
        "wires": [
            [
                "895a68a939600cd5"
            ]
        ]
    },
    {
        "id": "82d9a6e4b26e5770",
        "type": "switch",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "End",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 680,
        "wires": [
            [
                "18c978471dd15c23"
            ],
            [
                "792687aae52e49e8"
            ]
        ]
    },
    {
        "id": "266342b044b0d117",
        "type": "csv",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "9a11a81f559f9515"
            ]
        ]
    },
    {
        "id": "18c978471dd15c23",
        "type": "ui_date_picker",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Start",
        "label": "Start",
        "group": "1b8e2c970a49e110",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1590,
        "y": 680,
        "wires": [
            [
                "e05136bb7c2f2859"
            ]
        ]
    },
    {
        "id": "792687aae52e49e8",
        "type": "ui_date_picker",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "End",
        "label": "End",
        "group": "1b8e2c970a49e110",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1590,
        "y": 740,
        "wires": [
            [
                "3deb96c2e41d4b0a"
            ]
        ]
    },
    {
        "id": "856635bb1d42d6e0",
        "type": "file in",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Read Sample Data",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 760,
        "wires": [
            [
                "266342b044b0d117"
            ]
        ]
    },
    {
        "id": "e05136bb7c2f2859",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Set Flow Var",
        "func": "flow.set(\"graphStart\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "3deb96c2e41d4b0a",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Set Flow Var",
        "func": "flow.set(\"graphEnd\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "b9fc73066d698417",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "Read config",
        "func": "msg.filename = flow.get(\"PlayerDataFN\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 760,
        "wires": [
            [
                "856635bb1d42d6e0"
            ]
        ]
    },
    {
        "id": "00fe1687539e4acb",
        "type": "ui_button",
        "z": "17fd6e0f1c66137c",
        "g": "c175c2ec63061429",
        "name": "",
        "group": "1b8e2c970a49e110",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Generate Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 760,
        "wires": [
            [
                "b9fc73066d698417"
            ]
        ]
    },
    {
        "id": "3abb3d519f8ecb18",
        "type": "comment",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Generate dice data",
        "info": "Uses for loops to create data\nJoin binds them\ntransposes the data (because it's written lenghtwise)\n",
        "x": 130,
        "y": 860,
        "wires": []
    },
    {
        "id": "780466eb4ff31394",
        "type": "inject",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 980,
        "wires": [
            [
                "048dce9438eace53",
                "e0d38fade5125d03",
                "a0e10bd14e50d18b",
                "14bb9badb25845de"
            ]
        ]
    },
    {
        "id": "048dce9438eace53",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Dice data gen",
        "func": "msg.topic = \"Player1\";\nlet output = [\"Player1\"];\nlet i = 0;\nfor (i = 0; i < 20; i++) {\n    output.push( Math.round(Math.random() * 6 + 1));\n}\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1040,
        "wires": [
            [
                "6c7aab8c807c9d17",
                "ed0293b1f59a8397"
            ]
        ]
    },
    {
        "id": "e0d38fade5125d03",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Dice data gen",
        "func": "msg.topic = \"Player2\";\nlet output = [\"Player2\"];\nlet i = 0;\nfor (i = 0; i < 20; i++) {\n    output.push( Math.round(Math.random() * 6 + 1));\n}\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1100,
        "wires": [
            [
                "6c7aab8c807c9d17",
                "ed0293b1f59a8397"
            ]
        ]
    },
    {
        "id": "a0e10bd14e50d18b",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Dice data gen",
        "func": "msg.topic = \"Player3\";\nlet output = [\"Player3\"];\nlet i = 0;\nfor (i = 0; i < 20; i++) {\n    output.push( Math.round(Math.random() * 6 + 1));\n}\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1160,
        "wires": [
            [
                "6c7aab8c807c9d17",
                "ed0293b1f59a8397"
            ]
        ]
    },
    {
        "id": "14bb9badb25845de",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "x data gen",
        "func": "msg.topic = \"Turn\";\nlet output = [\"Turn\"];\nlet i = 0;\nfor (i = 0; i < 20; i++) {\n    output.push(i+1);\n}\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 980,
        "wires": [
            [
                "6c7aab8c807c9d17"
            ]
        ]
    },
    {
        "id": "6c7aab8c807c9d17",
        "type": "join",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 550,
        "y": 980,
        "wires": [
            [
                "55f606f7c312d466",
                "d44d5cbb68c05a77"
            ]
        ]
    },
    {
        "id": "ed0293b1f59a8397",
        "type": "debug",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Data Gen",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 900,
        "wires": []
    },
    {
        "id": "55f606f7c312d466",
        "type": "debug",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Join",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 920,
        "wires": []
    },
    {
        "id": "d44d5cbb68c05a77",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Invert data",
        "func": "let output = [];\n\nfor (let i = 0; i < msg.payload[0].length; i++) {\n    output.push([]);\n};\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    for (var j = 0; j < msg.payload[0].length; j++) {\n        output[j].push(msg.payload[i][j]);\n    };\n};\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 980,
        "wires": [
            [
                "021e22b49c5da8c9"
            ]
        ]
    },
    {
        "id": "021e22b49c5da8c9",
        "type": "csv",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Turn,Player1, Player2, Player3",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 910,
        "y": 980,
        "wires": [
            [
                "0a3eaaa2cca098b4"
            ]
        ]
    },
    {
        "id": "0a3eaaa2cca098b4",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "GenDiceData FileWrite Config",
        "func": "msg.filename = flow.get(\"PlayerDataFN\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 980,
        "wires": [
            [
                "ddecf906a80322c7",
                "abfba6236acc5841"
            ]
        ]
    },
    {
        "id": "ddecf906a80322c7",
        "type": "file",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Dice Data",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "abfba6236acc5841",
        "type": "debug",
        "z": "17fd6e0f1c66137c",
        "g": "663028f8b8ccf169",
        "name": "Invert Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 900,
        "wires": []
    },
    {
        "id": "ae5b6eb3b2a087ca",
        "type": "comment",
        "z": "17fd6e0f1c66137c",
        "g": "0e3e8448ad30ad11",
        "name": "Flow Parameters",
        "info": "Used in:\n• Line Chart\n• Mass Data Gen",
        "x": 120,
        "y": 440,
        "wires": []
    },
    {
        "id": "ff7371fa9417502f",
        "type": "inject",
        "z": "17fd6e0f1c66137c",
        "g": "0e3e8448ad30ad11",
        "name": "Set Flow Par",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "454265f986e3d018"
            ]
        ]
    },
    {
        "id": "454265f986e3d018",
        "type": "function",
        "z": "17fd6e0f1c66137c",
        "g": "0e3e8448ad30ad11",
        "name": "Set Flow Par",
        "func": "flow.set(\"slaveIP\", \"192.168.101.253\");\nflow.set(\"PlayerDataFN\", \"C:/Users/User/Documents/Coding/Node Red/Writing CSV/Sample.csv\");\n\n//Graphing\nflow.set(\"graphStart\", new Date().getTime());\nflow.set(\"graphEnd\", new Date().getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ec7385d7640cf636",
        "type": "inject",
        "z": "9b30030f667a40d7",
        "name": "Temperature",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50* (1 + 0.4*($random()-0.5))",
        "payloadType": "jsonata",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "97a45e4e164b7a7d"
            ]
        ]
    },
    {
        "id": "97a45e4e164b7a7d",
        "type": "change",
        "z": "9b30030f667a40d7",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "temperature",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "deviceID",
                "pt": "msg",
                "to": "($env(\"deviceID\") = \"\") ? \"Simulated\" : $env(\"deviceID\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "(payload > 56) ? \"alert\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 220,
        "wires": [
            [
                "f58173db2f7bbf01"
            ]
        ]
    },
    {
        "id": "762ed6d68b4fd934",
        "type": "change",
        "z": "9b30030f667a40d7",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "humidity",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "deviceID",
                "pt": "msg",
                "to": "($env(\"deviceID\") = \"\") ? \"Simulated\" : $env(\"deviceID\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "(payload > 92) ? \"alert\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "30c5109676240378"
            ]
        ]
    },
    {
        "id": "1cd8206f4e2fac13",
        "type": "inject",
        "z": "9b30030f667a40d7",
        "name": "Humidity",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "80* (1 + 0.4*($random()-0.5))",
        "payloadType": "jsonata",
        "x": 280,
        "y": 340,
        "wires": [
            [
                "762ed6d68b4fd934"
            ]
        ]
    },
    {
        "id": "f58173db2f7bbf01",
        "type": "subflow:2197f9b20e245122",
        "z": "9b30030f667a40d7",
        "name": "TempUI",
        "env": [],
        "x": 880,
        "y": 220,
        "wires": []
    },
    {
        "id": "30c5109676240378",
        "type": "subflow:3bab716a8a493dbf",
        "z": "9b30030f667a40d7",
        "name": "",
        "env": [],
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "7a07aa1aa0f75a15",
        "type": "inject",
        "z": "9b30030f667a40d7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"Name\":\"Kazuhito Yokoi\",\"Age\":\"35\",\"Favourite Color\":\"red\",\"Date Of Birth\":\"12/09/1983\"},{\"Name\":\"Oli Bob\",\"Age\":\"12\",\"Favourite Color\":\"red\",\"Date Of Birth\":\"12/08/2017\"}]",
        "payloadType": "json",
        "x": 270,
        "y": 460,
        "wires": [
            [
                "ba9c0a4b59a5adb3"
            ]
        ]
    },
    {
        "id": "ba17f9b9f63da1eb",
        "type": "comment",
        "z": "9b30030f667a40d7",
        "name": "Normal table",
        "info": "",
        "x": 270,
        "y": 420,
        "wires": []
    },
    {
        "id": "7ca243ff5e69a98f",
        "type": "ui_template",
        "z": "9b30030f667a40d7",
        "d": true,
        "group": "c1e6de0d4d0c97f8",
        "name": "CSS",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #Dashboard_Temperature{\n    //background-image: url(\"C:\\Users\\User\\Pictures\\Image1.jpg\");\n    //background-color: blue;\n    border-style: none;\n\n    }\n.title{\n    font-size: 1.4em;\n    color: black !important;\n    border-left: 6px solid orange;\n}\n.save button:hover {\n  width: 50%;\n  margin: auto;\n  background-color: #12be25 !important; \n  color: black !important;\n}\n.save button  {\n  border: none;\n  border-radius: 8px;\n  text-align: center;\n  width: 50% ;\n  transition-duration: 0.4s;\n  background-color: #ddffdd;\n  color: white;         \n}\n.chart {\n  //background-color: green;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "eed589110fc1ad1f",
        "type": "ui_text",
        "z": "9b30030f667a40d7",
        "group": "c1e6de0d4d0c97f8",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "This is a Title",
        "format": "",
        "layout": "row-spread",
        "className": "title",
        "x": 270,
        "y": 160,
        "wires": []
    },
    {
        "id": "948c301489226e89",
        "type": "ui_button",
        "z": "9b30030f667a40d7",
        "name": "",
        "group": "c1e6de0d4d0c97f8",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "save",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ba9c0a4b59a5adb3",
        "type": "ui_table",
        "z": "9b30030f667a40d7",
        "group": "210b3638edc51bb5",
        "name": "",
        "order": 1,
        "width": 19,
        "height": 5,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 550,
        "y": 460,
        "wires": []
    },
    {
        "id": "2cc22929a47b82b3",
        "type": "ui_template",
        "z": "9b30030f667a40d7",
        "d": true,
        "group": "",
        "name": "Node-Red Dashboard Custom CSS",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n    /*Main background*/\n    \n    body {\n    \n        background: -webkit-linear-gradient(\n            55deg,\n            #009785 0%,\n            #245aa5 50%,\n            #b800e9 100%\n            );\n            \n            //background-image: url(\"C:\\Users\\User\\Pictures\\Image1.jpg\") !important;\n            /*\n            background-image: url(\"images\\Image1.jpg\") !important; // file path\n            background-repeat: no-repeat !important;\n            background-size: auto !important;\n            background-position: bottom left !important;\n            */\n    }\n\n    /*Top bar*/\n    body.nr-dashboard-theme md-toolbar,\n    body.nr-dashboard-theme md-content md-card {\n        background-color: transparent !important;\n        color: #FFFFFF;// !important;\n    }\n\n    //testing\n    .nr-dashboard-chart-title {\n        color: 5566FF !important;\n    }\n\n\n    /*Left menu*/\n    /*Sidebar*/\n    body.nr-dashboard-theme md-sidenav {\n        color: white !important;\n        background-color: rgba(0,0,0,0) !important;\n    }\n    /*Hover selection*/\n    a.md-no-style, button.md-no-style {\n        border-radius: 10px !important;\n    }\n    /*Selected*/\n    .nr-menu-item-active div button {\n        border-right: 4px solid rgb(41 98 255) !important;\n    }\n    /*List*/\n    body.nr-dashboard-theme md-sidenav div.md-list-item-inner {\n        color: white !important;\n        background-color: rgba(40,85,165,1) !important;\n        border-radius: 10px !important;\n    }\n\n\n    /*Groups*/\n    ui-card-panel {\n        background-color: rgba(255,255,255,0.1) !important;\n        border-radius: 10px !important;\n        box-shadow: rgba(25,90,85,0.35) 0px 5px 15px !important;}\n    .nr-dashboard-theme ui-card-panel {\n        border: none !important;\n    }\n    /*Name groups*/\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: rgba(255, 255, 255, 0.5) !important;\n    }\n\n\n    /*Bouttons*/\n    .nr-dashboard-theme .nr-dashboard-button .md-button {\n        background-color: rgba(255,255,255,.1);// !important;\n    }\n    .md-button {\n        border-radius: 10px !important;\n    }\n\n\n    /*Dropdown menu*/\n    .nr-dashboard-theme md-select-menu{\n        background-color: rgba(40,85,165,1) !important;\n    }\n    .nr-dashboard-theme md-select-menu, .nr-dashboard-theme md-select-menu md-option {\n        background-color: transparent !important;\n    }\n    .nr-dashboard-theme .md-select-menu-container {\n        border-radius: 10px !important;\n        border: none !important;\n    }\n    .nr-dashboard-theme md-select-menu md-option[selected] {\n        color: white !important;\n        background-color: #1a3566 !important;\n    }\n\n    /*Template*/\n    md-card>img, md-card>md-card-header img, md-card md-card-title-media img {\n        border-radius: 10px !important;\n    }\n\n    /* Color picker text BG */\n    .nr-dashboard-theme .color-picker-input-wrapper > input {\n        color: white !important;\n        background-color: transparent !important;\n    }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 340,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "f2218075351147e7",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Clear",
        "func": "msg.data = { \n    \"name\": \"\", \n    \"value\": \"\", \n    \"description\": \"\" \n    };\nmsg.complete = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 50,
        "y": 80,
        "wires": [
            [
                "9ab357f2bd646ca3",
                "d7e74ae60251d6e7",
                "fa9acf69143d67e9",
                "ff7f4dd399909398",
                "b24be18dee394e09",
                "c5992b036b3b8c4f",
                "94ae053219bfd97d"
            ]
        ]
    },
    {
        "id": "9ab357f2bd646ca3",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 80,
        "wires": [
            [
                "afc186503a0f66ca"
            ]
        ]
    },
    {
        "id": "d7e74ae60251d6e7",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "ab2ece5e15b8f81a"
            ]
        ]
    },
    {
        "id": "fa9acf69143d67e9",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 200,
        "wires": [
            [
                "0c6c214d53719567"
            ]
        ]
    },
    {
        "id": "ff7f4dd399909398",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 260,
        "wires": [
            [
                "7656794804157f21"
            ]
        ]
    },
    {
        "id": "b24be18dee394e09",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "a05a9f92e0cfc902"
            ]
        ]
    },
    {
        "id": "c5992b036b3b8c4f",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 380,
        "wires": [
            [
                "2fb3f4f5a93be501"
            ]
        ]
    },
    {
        "id": "94ae053219bfd97d",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Name",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.name;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 440,
        "wires": [
            [
                "7d8c6c3eed93e5e6"
            ]
        ]
    },
    {
        "id": "afc186503a0f66ca",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Ground Bond High",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "GB_H",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "703332854a757855"
            ]
        ]
    },
    {
        "id": "ab2ece5e15b8f81a",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Ground Bound Low",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "GB_L",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "fd8b1463839fc941"
            ]
        ]
    },
    {
        "id": "0c6c214d53719567",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "ACW High",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "ACW_H",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "12e1e57d557347ff"
            ]
        ]
    },
    {
        "id": "7656794804157f21",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "ACW Low",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "ACW_L",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "3c82f4aa69a9d39b"
            ]
        ]
    },
    {
        "id": "a05a9f92e0cfc902",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 5: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par05",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "f9ae7d94e0610869"
            ]
        ]
    },
    {
        "id": "2fb3f4f5a93be501",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 6: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par06",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 380,
        "wires": [
            [
                "292dccfb8724bd06"
            ]
        ]
    },
    {
        "id": "7d8c6c3eed93e5e6",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 7: Name",
        "tooltip": "",
        "group": "53037fcbd25f4f9d",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par07",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 470,
        "y": 440,
        "wires": [
            [
                "e83867c24f97e3f9"
            ]
        ]
    },
    {
        "id": "703332854a757855",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 80,
        "wires": [
            [
                "42d468194793b0bf"
            ]
        ]
    },
    {
        "id": "fd8b1463839fc941",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 140,
        "wires": [
            [
                "ea2042e53d08dc6f"
            ]
        ]
    },
    {
        "id": "12e1e57d557347ff",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "4793cdb200390922"
            ]
        ]
    },
    {
        "id": "3c82f4aa69a9d39b",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 260,
        "wires": [
            [
                "0bb4c91301d3eae0"
            ]
        ]
    },
    {
        "id": "f9ae7d94e0610869",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "b78d1c7c27ac92eb"
            ]
        ]
    },
    {
        "id": "292dccfb8724bd06",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 380,
        "wires": [
            [
                "1550f6258b6f1bc8"
            ]
        ]
    },
    {
        "id": "e83867c24f97e3f9",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Values",
        "func": "if (msg.data != undefined) {\n    msg.payload = msg.data.value;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.name = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 440,
        "wires": [
            [
                "308fca80f7a763fc"
            ]
        ]
    },
    {
        "id": "42d468194793b0bf",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 1: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par01",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "548573d4e9406bd0"
            ]
        ]
    },
    {
        "id": "ea2042e53d08dc6f",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 2: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par02",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 140,
        "wires": [
            [
                "88a13a91462eac02"
            ]
        ]
    },
    {
        "id": "4793cdb200390922",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 3: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par03",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "57bf6031606efca9"
            ]
        ]
    },
    {
        "id": "0bb4c91301d3eae0",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 4: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par04",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 260,
        "wires": [
            [
                "16379cd5c0b0ff2f"
            ]
        ]
    },
    {
        "id": "b78d1c7c27ac92eb",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 5: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par05",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 320,
        "wires": [
            [
                "470b8e2ca1f9cc40"
            ]
        ]
    },
    {
        "id": "1550f6258b6f1bc8",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 6: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par06",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "2b826c8de29bce6f"
            ]
        ]
    },
    {
        "id": "308fca80f7a763fc",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 7: Value",
        "tooltip": "",
        "group": "f24d9462b2c2f4ce",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par07",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 440,
        "wires": [
            [
                "65eac43d12d4d7b3"
            ]
        ]
    },
    {
        "id": "548573d4e9406bd0",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 80,
        "wires": [
            [
                "36502b890b8d5a21"
            ]
        ]
    },
    {
        "id": "88a13a91462eac02",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 140,
        "wires": [
            [
                "75a4958b066ff934"
            ]
        ]
    },
    {
        "id": "57bf6031606efca9",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "f23209d74766606d"
            ]
        ]
    },
    {
        "id": "16379cd5c0b0ff2f",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "b449a683e8e04560"
            ]
        ]
    },
    {
        "id": "470b8e2ca1f9cc40",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "56aa132a1890a010"
            ]
        ]
    },
    {
        "id": "2b826c8de29bce6f",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "548131a7fd39f7c4"
            ]
        ]
    },
    {
        "id": "65eac43d12d4d7b3",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Description",
        "func": ";if (msg.data != undefined) {\n    msg.payload = msg.data.description;\n} else {\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.value = msg.payload;\n    delete msg.payload;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            [
                "6bfaf439723cbcfa"
            ]
        ]
    },
    {
        "id": "36502b890b8d5a21",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 1: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par01",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 80,
        "wires": [
            [
                "314dd1f84db4c9e7"
            ]
        ]
    },
    {
        "id": "75a4958b066ff934",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 2: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par02",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "5f56f32028adfc11"
            ]
        ]
    },
    {
        "id": "f23209d74766606d",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 3: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par03",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 200,
        "wires": [
            [
                "ad9a0b69bce7ce07"
            ]
        ]
    },
    {
        "id": "b449a683e8e04560",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 4: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par04",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 260,
        "wires": [
            [
                "b2ae2df84570174f"
            ]
        ]
    },
    {
        "id": "56aa132a1890a010",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 5: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par05",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 320,
        "wires": [
            [
                "47b58c8dffa90fde"
            ]
        ]
    },
    {
        "id": "548131a7fd39f7c4",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 6: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par06",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "56ced1adbe29dcfb"
            ]
        ]
    },
    {
        "id": "6bfaf439723cbcfa",
        "type": "ui_text_input",
        "z": "e28943498755ce53",
        "name": "",
        "label": "Parameter 7: Instructions",
        "tooltip": "",
        "group": "ad3c4128defb0956",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "Par07",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 440,
        "wires": [
            [
                "8b0a371d31386d71"
            ]
        ]
    },
    {
        "id": "314dd1f84db4c9e7",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\" :        \"\",\n        \"value\":        \"\",\n        \"description\":  \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for(let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 80,
        "wires": [
            [
                "592dc8bd60e904b2"
            ]
        ]
    },
    {
        "id": "5f56f32028adfc11",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 140,
        "wires": [
            [
                "592dc8bd60e904b2"
            ]
        ]
    },
    {
        "id": "ad9a0b69bce7ce07",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 200,
        "wires": [
            [
                "592dc8bd60e904b2"
            ]
        ]
    },
    {
        "id": "b2ae2df84570174f",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 260,
        "wires": [
            [
                "592dc8bd60e904b2"
            ]
        ]
    },
    {
        "id": "47b58c8dffa90fde",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 320,
        "wires": [
            [
                "592dc8bd60e904b2"
            ]
        ]
    },
    {
        "id": "56ced1adbe29dcfb",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 380,
        "wires": [
            [
                "592dc8bd60e904b2"
            ]
        ]
    },
    {
        "id": "8b0a371d31386d71",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Final",
        "func": "delete msg.parts;\nif (msg.data == undefined) {\n    let output = context.get(\"Stored\") || {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"description\": \"\"\n    }\n\n    if (msg.store == undefined) {\n        msg.store = {};\n    }\n    msg.store.description = msg.payload;\n\n    let keys = Object.keys(msg.store);\n    let len = keys.length;\n    for (let i = 0; i < len; i++) {\n        output[keys[i]] = msg.store[keys[i]];\n    }\n    context.set(\"Stored\", output);\n    msg.payload = output;\n\n\n    return msg;\n\n} else if (msg.data.name != \"\") {\n    msg.payload = msg.data;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 440,
        "wires": [
            [
                "592dc8bd60e904b2"
            ]
        ]
    },
    {
        "id": "592dc8bd60e904b2",
        "type": "join",
        "z": "e28943498755ce53",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1910,
        "y": 80,
        "wires": [
            [
                "e57afd52ace7da30"
            ]
        ],
        "info": "The data dump here is done by sending\r\nempty data and then clearing empty data\r\nafter the join node."
    },
    {
        "id": "e57afd52ace7da30",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Set trigger / dump",
        "func": "msg.complete = \"\";\nif (msg.lineflag == \"clear\") {\n    return { \n        msg: {\n            topic:      \"clear\",\n            payload:    \"\",\n            lineFlag:   \"clear\"\n\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 80,
        "wires": [
            [
                "93a1a11bf8b6f3e1"
            ]
        ]
    },
    {
        "id": "93a1a11bf8b6f3e1",
        "type": "function",
        "z": "e28943498755ce53",
        "name": "Del empties",
        "func": "msg.topic = \"parameterData\"; //Set topic\ndelete msg.data; // Just no need for this\ndelete msg.payload.save; //Needed this to put lineflag in as member\n\nlet output = {},\n    len = Object.keys(msg.payload).length,\n    keys = Object.keys(msg.payload);\nfor (let i = 0; i < len; i++) {\n    if((msg.payload[keys[i]] != null) && (msg.payload[keys[i]] != \"\")) {\n        output[keys[i]] = msg.payload[keys[i]];\n    }\n}\nmsg.payload = output;\n/*\nmsg.test = {\n    \"length\": len,\n    \"msg.payload\": msg.payload,\n    \"Payload[0]\": msg.payload[keys[0]],\n    \"count\": count,\n    \"output\": output\n}\n*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2270,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d9ed99f65a21484b",
        "type": "comment",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Inject directly (ACTIVE)",
        "info": "Working on storing data and then calling it up yo",
        "x": 220,
        "y": 580,
        "wires": []
    },
    {
        "id": "d0b113538530fc21",
        "type": "inject",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 640,
        "wires": [
            [
                "2fee471ee603747b",
                "cd57cc93f40b33bf"
            ]
        ]
    },
    {
        "id": "2fee471ee603747b",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Player1",
        "func": "msg.timestamp = msg.payload;\nmsg.payload = Math.round(Math.random() * 6 + 1);\nmsg.topic = \"Player1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 640,
        "wires": [
            [
                "77d280335ca415c3",
                "8e31874de854de58",
                "72791997b670114d"
            ]
        ]
    },
    {
        "id": "cd57cc93f40b33bf",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Player2",
        "func": "msg.timestamp = msg.payload;\nmsg.payload = Math.round(Math.random() * 6 + 1);\nmsg.topic = \"Player2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 760,
        "wires": [
            [
                "77d280335ca415c3",
                "29b0db1a3a02d679",
                "72791997b670114d"
            ]
        ]
    },
    {
        "id": "77d280335ca415c3",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Player Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 560,
        "wires": []
    },
    {
        "id": "8e31874de854de58",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Write D02 1W",
        "func": "\nvar fc=6;\nvar sa=2;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 640,
        "wires": [
            [
                "1b7ec13bb2727fe8"
            ]
        ]
    },
    {
        "id": "72791997b670114d",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Buffer",
        "func": "//msg.payload = {};\ncontext.set(msg.topic, msg.payload);\nif (msg.topic == \"bufferTrigger\") {\n\n    let output = {};\n    msg.payload = {};\n\n    /*\n    //Writing the config for file listener\n    /*The file listener node is used when the buffer is\n    writing to a file\n    msg.payload[\"start\"] = flow.get(\"path\");\n    msg.payload[\"pattern\"] = flow.get(\"fileName\");\n    */\n\n    output.timestamp = new Date().getTime();\n    //Incomplete\n    /* The idea here is to be able to load parameters into \n    an external file and then update that file and not need \n    to this node*/\n    //let tags = flow.get(\"Parameters\").tagNames;\n\n    let tags = [\"Player1\", \"Player2\"]; // The same as the topics of inputs\n\n    for(let i = 0; i < tags.length; i++) {\n        output[tags[i]] = context.get(tags[i]);\n    }\n    msg.data = output;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 700,
        "wires": [
            [
                "403b2c84a44e5503"
            ]
        ],
        "info": "Message topic = heading in database"
    },
    {
        "id": "29b0db1a3a02d679",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Write D03 1W",
        "func": "\nvar fc=6;\nvar sa=3;\nvar addresses=1;\nvar value=msg.payload;\n\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={\"value\":value , 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 760,
        "wires": [
            [
                "5163250ad99982c8"
            ]
        ]
    },
    {
        "id": "1b7ec13bb2727fe8",
        "type": "modbus-flex-write",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "aca8e25181d21be7",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 830,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "99b26f3bee3c8bd5",
        "type": "inject",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Buffer Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1.5",
        "topic": "bufferTrigger",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 700,
        "wires": [
            [
                "72791997b670114d"
            ]
        ]
    },
    {
        "id": "403b2c84a44e5503",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "function 9",
        "func": "\n\n//Incomplete \n/* Just another set of things that can be imported*/\nlet tableName = \"\";\nlet headings = \"\";\nlet values = \"\";\nlet sqlCommand = \"\";\n\n//Working on the headings\nheadings = ' (' + Object.keys(msg.data).toString() + ') ';\n\n//Inputing the values from msg.data\nvalues = 'VALUES (' + Object.values(msg.data).toString() + ');';\n\n//Table name\ntableName = \"NodeRed.dbo.TwoPlayerDice \"; // space is there for sqlCommand text\n\n//Create SQL command\nsqlCommand = 'INSERT INTO ' + tableName + headings + values;\n\nmsg.payload = sqlCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 700,
        "wires": [
            [
                "bfc72059ee745baa"
            ]
        ]
    },
    {
        "id": "5163250ad99982c8",
        "type": "modbus-flex-write",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "server": "aca8e25181d21be7",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 830,
        "y": 760,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bfc72059ee745baa",
        "type": "MSSQL",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 980,
        "y": 700,
        "wires": [
            [
                "2f44c5c9d96f49e7"
            ]
        ]
    },
    {
        "id": "2f44c5c9d96f49e7",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 700,
        "wires": []
    },
    {
        "id": "e9626d92f1c4231c",
        "type": "inject",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 860,
        "wires": [
            [
                "acbff347f607370d"
            ]
        ]
    },
    {
        "id": "acbff347f607370d",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Read Hold 2 - 3",
        "func": "var fc=3;\nvar sa=2;\nvar addresses=2;\nvar slave_ip=msg.payload.slave_ip;\nmsg.slave_ip = flow.get(\"slaveIP\");\nmsg.payload={value: msg.payload, 'fc': fc, 'unitid': 1, 'address': sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 860,
        "wires": [
            [
                "62e165e9060a41ac"
            ]
        ]
    },
    {
        "id": "62e165e9060a41ac",
        "type": "modbus-flex-getter",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "local getter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "aca8e25181d21be7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 590,
        "y": 860,
        "wires": [
            [],
            [
                "2975bbf63abefb31"
            ]
        ]
    },
    {
        "id": "2975bbf63abefb31",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Read 16Bit int",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt16BE();\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 860,
        "wires": [
            [
                "f13ad1d7d973c746"
            ]
        ]
    },
    {
        "id": "f13ad1d7d973c746",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "Separate data",
        "func": "msg.payload = {\n    \"Player1\" : msg.values[0],\n    \"Player2\" : msg.values[1]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 860,
        "wires": [
            [
                "4b5f00d0a1bfd552"
            ]
        ]
    },
    {
        "id": "4b5f00d0a1bfd552",
        "type": "split",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1150,
        "y": 860,
        "wires": [
            [
                "7c84fe6a6006617d"
            ]
        ]
    },
    {
        "id": "7c84fe6a6006617d",
        "type": "switch",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Player1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Player2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 860,
        "wires": [
            [
                "a034bf3851442046"
            ],
            [
                "add178ce8930c5d9"
            ]
        ]
    },
    {
        "id": "a034bf3851442046",
        "type": "mqtt out",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "",
        "topic": "Test/Player1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ad6dcc65156dd01c",
        "x": 1450,
        "y": 820,
        "wires": []
    },
    {
        "id": "add178ce8930c5d9",
        "type": "mqtt out",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "",
        "topic": "Test/Player2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ad6dcc65156dd01c",
        "x": 1450,
        "y": 900,
        "wires": []
    },
    {
        "id": "7d9ab4d0eeef884b",
        "type": "inject",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 960,
        "wires": [
            [
                "6a907c09d1641af6"
            ]
        ]
    },
    {
        "id": "6a907c09d1641af6",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "function 10",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 960,
        "wires": [
            [
                "cd82a8f17ec4b36e"
            ]
        ]
    },
    {
        "id": "cd82a8f17ec4b36e",
        "type": "MSSQL",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "select * from NodeRed.dbo.TwoPlayerDice\n    where LongTime = 1681384117065;",
        "outField": "payload",
        "x": 600,
        "y": 960,
        "wires": [
            [
                "576da4fa9da47ac8"
            ]
        ]
    },
    {
        "id": "576da4fa9da47ac8",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "function 11",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 960,
        "wires": [
            [
                "a6e30f8019df8026"
            ]
        ]
    },
    {
        "id": "a6e30f8019df8026",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "51589d74d611689a",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 960,
        "wires": []
    },
    {
        "id": "1fcb8b4e0bff81c3",
        "type": "ui_button",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "show_chart",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 230,
        "y": 1460,
        "wires": [
            [
                "93aa61cd40a2a05f"
            ]
        ]
    },
    {
        "id": "93aa61cd40a2a05f",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1460,
        "wires": [
            [
                "4d5d223efefabfeb"
            ]
        ]
    },
    {
        "id": "4d5d223efefabfeb",
        "type": "file in",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 580,
        "y": 1460,
        "wires": [
            [
                "6334e8f34d05c806"
            ]
        ]
    },
    {
        "id": "6334e8f34d05c806",
        "type": "csv",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 730,
        "y": 1460,
        "wires": [
            [
                "fd343ce4ae3d1a43",
                "df0eff99c8cbad90"
            ]
        ]
    },
    {
        "id": "fd343ce4ae3d1a43",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1420,
        "wires": []
    },
    {
        "id": "df0eff99c8cbad90",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Format data for chart",
        "func": "var chart = [{\n    \"series\":[\"Pressure\",\"OUT2\"],\n    \"data\":[],\n    \"labels\":[\"\"]\n}];\n\nvar Player1 = [];\nvar Player2 = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    Player1.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].Player1});\n    Player2.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].Player2});\n\n}\nchart[0].data.push(Player1);\nchart[0].data.push(Player2);\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1460,
        "wires": [
            [
                "e7c021dfc1971e2e"
            ]
        ]
    },
    {
        "id": "e7c021dfc1971e2e",
        "type": "ui_chart",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 7,
        "width": 18,
        "height": 6,
        "label": "File data",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "80a942296819bcdc",
        "type": "fs-file-lister",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "start": "C:\\Users\\User\\Documents\\Coding\\Node Red\\Recipes",
        "pattern": "*.*",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": true,
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "5da371c76d4aab6e",
                "0cd61d0848ae8bdf",
                "c778681fbb1d003f"
            ]
        ]
    },
    {
        "id": "a654ab45d04ab0b9",
        "type": "inject",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1120,
        "wires": [
            [
                "80a942296819bcdc"
            ]
        ]
    },
    {
        "id": "5da371c76d4aab6e",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 710,
        "y": 1120,
        "wires": []
    },
    {
        "id": "716168c41cf7544f",
        "type": "comment",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "SD Card File Browser",
        "info": "",
        "x": 260,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5111957458f23474",
        "type": "ui_button",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 260,
        "y": 1160,
        "wires": [
            [
                "80a942296819bcdc"
            ]
        ]
    },
    {
        "id": "68659c7fb211728a",
        "type": "ui_dropdown",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "a649fab2.daf3d8",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 890,
        "y": 1160,
        "wires": [
            [
                "0c1e38ad95a4438c"
            ]
        ]
    },
    {
        "id": "0cd61d0848ae8bdf",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Format data",
        "func": "msg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    let obj = {};\n    obj [msg.payload[i].name]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "68659c7fb211728a",
                "b50b59519fa68022"
            ]
        ]
    },
    {
        "id": "9bf5c57d16b62e7f",
        "type": "ui_template",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "group": "a649fab2.daf3d8",
        "name": "",
        "order": 6,
        "width": 18,
        "height": 6,
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1080,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "ce1b494cb98de31c",
        "type": "template",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/red/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 920,
        "y": 1220,
        "wires": [
            [
                "9bf5c57d16b62e7f"
            ]
        ]
    },
    {
        "id": "c778681fbb1d003f",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Convert timestamps",
        "func": "\nfor (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1220,
        "wires": [
            [
                "ce1b494cb98de31c"
            ]
        ]
    },
    {
        "id": "0c1e38ad95a4438c",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Save selection",
        "func": "// Save the file name selected from the dropdown in the flow context\nflow.set(\"fileselected\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "53309bd334780b7f",
        "type": "ui_button",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "",
        "group": "a649fab2.daf3d8",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "17563d9d9242889a"
            ]
        ]
    },
    {
        "id": "17563d9d9242889a",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\n// and delete the context/selection as we are deleting the file as well\nflow.set(\"fileselected\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1320,
        "wires": [
            [
                "727e73e098c75b22"
            ]
        ]
    },
    {
        "id": "727e73e098c75b22",
        "type": "file",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "80a942296819bcdc"
            ]
        ]
    },
    {
        "id": "b50b59519fa68022",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "formating",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a390fd7a79f04326",
        "type": "comment",
        "z": "e28943498755ce53",
        "g": "92aa249eaec5de7d",
        "name": "Flow Parameters",
        "info": "",
        "x": 1120,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6e07a07f802f2a18",
        "type": "inject",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1660,
        "wires": [
            [
                "80700e9d52863dfb"
            ]
        ]
    },
    {
        "id": "80700e9d52863dfb",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "function 12",
        "func": "let recipeHeaders = [\"file_code\", \"file_Name\", \"JSON_Data\"];\nlet obj = {\n    one :   1,\n    two :   [0,1,2],\n    three:  {\n        four    :   \"four\",\n        five    :   \"5 things\"\n    }\n}\nmsg.payload = \"INSERT INTO NodeRed.dbo.Recipes (\" + \n    recipeHeaders.toString() + \") VALUES (2, 'Tester', '\" + JSON.stringify(obj) + \"')\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1660,
        "wires": [
            [
                "6b5314cf87f51ec2",
                "a05bb29ac91da80e"
            ]
        ]
    },
    {
        "id": "6b5314cf87f51ec2",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1560,
        "wires": []
    },
    {
        "id": "a05bb29ac91da80e",
        "type": "MSSQL",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 630,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "3659caf0d0ab8711",
        "type": "inject",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1800,
        "wires": [
            [
                "c03c046254fa6da6"
            ]
        ]
    },
    {
        "id": "c03c046254fa6da6",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "function 13",
        "func": "msg.payload = \"select [JSON_Data] from [NodeRed].[dbo].[Recipes] where ID = 4\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1800,
        "wires": [
            [
                "c12b02288b168f4c"
            ]
        ]
    },
    {
        "id": "c12b02288b168f4c",
        "type": "MSSQL",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 600,
        "y": 1800,
        "wires": [
            [
                "e329c67db7a52247",
                "fdbf6524f3d4f24a"
            ]
        ]
    },
    {
        "id": "e329c67db7a52247",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1720,
        "wires": []
    },
    {
        "id": "fdbf6524f3d4f24a",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "function 15",
        "func": "msg.payload = msg.payload[0][\"JSON_Data\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1800,
        "wires": [
            [
                "e4862fd17c621ed5"
            ]
        ]
    },
    {
        "id": "e4862fd17c621ed5",
        "type": "json",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1800,
        "wires": [
            [
                "da9d3c5816598d49",
                "a8ceb766fa76166e"
            ]
        ]
    },
    {
        "id": "da9d3c5816598d49",
        "type": "function",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "function 14",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "a8ceb766fa76166e",
        "type": "debug",
        "z": "e28943498755ce53",
        "g": "a6f0ad5143b4c699",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1720,
        "wires": []
    }
]